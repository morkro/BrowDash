/*!
 * Draggabilly PACKAGED v1.2.3
 * Make that shiz draggable
 * http://draggabilly.desandro.com
 * MIT license
 */
!function(a) {
    function b() {}
    function c(a) {
        function c(b) {
            b.prototype.option || (b.prototype.option = function(b) {
                a.isPlainObject(b) && (this.options = a.extend(!0, this.options, b));
            });
        }
        function e(b, c) {
            a.fn[b] = function(e) {
                if ("string" == typeof e) {
                    for (var g = d.call(arguments, 1), h = 0, i = this.length; i > h; h++) {
                        var j = this[h], k = a.data(j, b);
                        if (k) if (a.isFunction(k[e]) && "_" !== e.charAt(0)) {
                            var l = k[e].apply(k, g);
                            if (void 0 !== l) return l;
                        } else f("no such method '" + e + "' for " + b + " instance"); else f("cannot call methods on " + b + " prior to initialization; attempted to call '" + e + "'");
                    }
                    return this;
                }
                return this.each(function() {
                    var d = a.data(this, b);
                    d ? (d.option(e), d._init()) : (d = new c(this, e), a.data(this, b, d));
                });
            };
        }
        if (a) {
            var f = "undefined" == typeof console ? b : function(a) {
                console.error(a);
            };
            return a.bridget = function(a, b) {
                c(b), e(a, b);
            }, a.bridget;
        }
    }
    var d = Array.prototype.slice;
    "function" == typeof define && define.amd ? define("jquery-bridget/jquery.bridget", [ "jquery" ], c) : c("object" == typeof exports ? require("jquery") : a.jQuery);
}(window), function(a) {
    function b(a) {
        return new RegExp("(^|\\s+)" + a + "(\\s+|$)");
    }
    function c(a, b) {
        var c = d(a, b) ? f : e;
        c(a, b);
    }
    var d, e, f;
    "classList" in document.documentElement ? (d = function(a, b) {
        return a.classList.contains(b);
    }, e = function(a, b) {
        a.classList.add(b);
    }, f = function(a, b) {
        a.classList.remove(b);
    }) : (d = function(a, c) {
        return b(c).test(a.className);
    }, e = function(a, b) {
        d(a, b) || (a.className = a.className + " " + b);
    }, f = function(a, c) {
        a.className = a.className.replace(b(c), " ");
    });
    var g = {
        hasClass: d,
        addClass: e,
        removeClass: f,
        toggleClass: c,
        has: d,
        add: e,
        remove: f,
        toggle: c
    };
    "function" == typeof define && define.amd ? define("classie/classie", g) : "object" == typeof exports ? module.exports = g : a.classie = g;
}(window), function(a) {
    function b(a) {
        if (a) {
            if ("string" == typeof d[a]) return a;
            a = a.charAt(0).toUpperCase() + a.slice(1);
            for (var b, e = 0, f = c.length; f > e; e++) if (b = c[e] + a, "string" == typeof d[b]) return b;
        }
    }
    var c = "Webkit Moz ms Ms O".split(" "), d = document.documentElement.style;
    "function" == typeof define && define.amd ? define("get-style-property/get-style-property", [], function() {
        return b;
    }) : "object" == typeof exports ? module.exports = b : a.getStyleProperty = b;
}(window), function(a) {
    function b(a) {
        var b = parseFloat(a), c = -1 === a.indexOf("%") && !isNaN(b);
        return c && b;
    }
    function c() {}
    function d() {
        for (var a = {
            width: 0,
            height: 0,
            innerWidth: 0,
            innerHeight: 0,
            outerWidth: 0,
            outerHeight: 0
        }, b = 0, c = g.length; c > b; b++) {
            var d = g[b];
            a[d] = 0;
        }
        return a;
    }
    function e(c) {
        function e() {
            if (!m) {
                m = !0;
                var d = a.getComputedStyle;
                if (j = function() {
                    var a = d ? function(a) {
                        return d(a, null);
                    } : function(a) {
                        return a.currentStyle;
                    };
                    return function(b) {
                        var c = a(b);
                        return c || f("Style returned " + c + ". Are you running this code in a hidden iframe on Firefox? See http://bit.ly/getsizebug1"), 
                        c;
                    };
                }(), k = c("boxSizing")) {
                    var e = document.createElement("div");
                    e.style.width = "200px", e.style.padding = "1px 2px 3px 4px", e.style.borderStyle = "solid", 
                    e.style.borderWidth = "1px 2px 3px 4px", e.style[k] = "border-box";
                    var g = document.body || document.documentElement;
                    g.appendChild(e);
                    var h = j(e);
                    l = 200 === b(h.width), g.removeChild(e);
                }
            }
        }
        function h(a) {
            if (e(), "string" == typeof a && (a = document.querySelector(a)), a && "object" == typeof a && a.nodeType) {
                var c = j(a);
                if ("none" === c.display) return d();
                var f = {};
                f.width = a.offsetWidth, f.height = a.offsetHeight;
                for (var h = f.isBorderBox = !(!k || !c[k] || "border-box" !== c[k]), m = 0, n = g.length; n > m; m++) {
                    var o = g[m], p = c[o];
                    p = i(a, p);
                    var q = parseFloat(p);
                    f[o] = isNaN(q) ? 0 : q;
                }
                var r = f.paddingLeft + f.paddingRight, s = f.paddingTop + f.paddingBottom, t = f.marginLeft + f.marginRight, u = f.marginTop + f.marginBottom, v = f.borderLeftWidth + f.borderRightWidth, w = f.borderTopWidth + f.borderBottomWidth, x = h && l, y = b(c.width);
                y !== !1 && (f.width = y + (x ? 0 : r + v));
                var z = b(c.height);
                return z !== !1 && (f.height = z + (x ? 0 : s + w)), f.innerWidth = f.width - (r + v), 
                f.innerHeight = f.height - (s + w), f.outerWidth = f.width + t, f.outerHeight = f.height + u, 
                f;
            }
        }
        function i(b, c) {
            if (a.getComputedStyle || -1 === c.indexOf("%")) return c;
            var d = b.style, e = d.left, f = b.runtimeStyle, g = f && f.left;
            return g && (f.left = b.currentStyle.left), d.left = c, c = d.pixelLeft, d.left = e, 
            g && (f.left = g), c;
        }
        var j, k, l, m = !1;
        return h;
    }
    var f = "undefined" == typeof console ? c : function(a) {
        console.error(a);
    }, g = [ "paddingLeft", "paddingRight", "paddingTop", "paddingBottom", "marginLeft", "marginRight", "marginTop", "marginBottom", "borderLeftWidth", "borderRightWidth", "borderTopWidth", "borderBottomWidth" ];
    "function" == typeof define && define.amd ? define("get-size/get-size", [ "get-style-property/get-style-property" ], e) : "object" == typeof exports ? module.exports = e(require("desandro-get-style-property")) : a.getSize = e(a.getStyleProperty);
}(window), function(a) {
    function b(b) {
        var c = a.event;
        return c.target = c.target || c.srcElement || b, c;
    }
    var c = document.documentElement, d = function() {};
    c.addEventListener ? d = function(a, b, c) {
        a.addEventListener(b, c, !1);
    } : c.attachEvent && (d = function(a, c, d) {
        a[c + d] = d.handleEvent ? function() {
            var c = b(a);
            d.handleEvent.call(d, c);
        } : function() {
            var c = b(a);
            d.call(a, c);
        }, a.attachEvent("on" + c, a[c + d]);
    });
    var e = function() {};
    c.removeEventListener ? e = function(a, b, c) {
        a.removeEventListener(b, c, !1);
    } : c.detachEvent && (e = function(a, b, c) {
        a.detachEvent("on" + b, a[b + c]);
        try {
            delete a[b + c];
        } catch (d) {
            a[b + c] = void 0;
        }
    });
    var f = {
        bind: d,
        unbind: e
    };
    "function" == typeof define && define.amd ? define("eventie/eventie", f) : "object" == typeof exports ? module.exports = f : a.eventie = f;
}(window), function() {
    function a() {}
    function b(a, b) {
        for (var c = a.length; c--; ) if (a[c].listener === b) return c;
        return -1;
    }
    function c(a) {
        return function() {
            return this[a].apply(this, arguments);
        };
    }
    var d = a.prototype, e = this, f = e.EventEmitter;
    d.getListeners = function(a) {
        var b, c, d = this._getEvents();
        if (a instanceof RegExp) {
            b = {};
            for (c in d) d.hasOwnProperty(c) && a.test(c) && (b[c] = d[c]);
        } else b = d[a] || (d[a] = []);
        return b;
    }, d.flattenListeners = function(a) {
        var b, c = [];
        for (b = 0; b < a.length; b += 1) c.push(a[b].listener);
        return c;
    }, d.getListenersAsObject = function(a) {
        var b, c = this.getListeners(a);
        return c instanceof Array && (b = {}, b[a] = c), b || c;
    }, d.addListener = function(a, c) {
        var d, e = this.getListenersAsObject(a), f = "object" == typeof c;
        for (d in e) e.hasOwnProperty(d) && -1 === b(e[d], c) && e[d].push(f ? c : {
            listener: c,
            once: !1
        });
        return this;
    }, d.on = c("addListener"), d.addOnceListener = function(a, b) {
        return this.addListener(a, {
            listener: b,
            once: !0
        });
    }, d.once = c("addOnceListener"), d.defineEvent = function(a) {
        return this.getListeners(a), this;
    }, d.defineEvents = function(a) {
        for (var b = 0; b < a.length; b += 1) this.defineEvent(a[b]);
        return this;
    }, d.removeListener = function(a, c) {
        var d, e, f = this.getListenersAsObject(a);
        for (e in f) f.hasOwnProperty(e) && (d = b(f[e], c), -1 !== d && f[e].splice(d, 1));
        return this;
    }, d.off = c("removeListener"), d.addListeners = function(a, b) {
        return this.manipulateListeners(!1, a, b);
    }, d.removeListeners = function(a, b) {
        return this.manipulateListeners(!0, a, b);
    }, d.manipulateListeners = function(a, b, c) {
        var d, e, f = a ? this.removeListener : this.addListener, g = a ? this.removeListeners : this.addListeners;
        if ("object" != typeof b || b instanceof RegExp) for (d = c.length; d--; ) f.call(this, b, c[d]); else for (d in b) b.hasOwnProperty(d) && (e = b[d]) && ("function" == typeof e ? f.call(this, d, e) : g.call(this, d, e));
        return this;
    }, d.removeEvent = function(a) {
        var b, c = typeof a, d = this._getEvents();
        if ("string" === c) delete d[a]; else if (a instanceof RegExp) for (b in d) d.hasOwnProperty(b) && a.test(b) && delete d[b]; else delete this._events;
        return this;
    }, d.removeAllListeners = c("removeEvent"), d.emitEvent = function(a, b) {
        var c, d, e, f, g = this.getListenersAsObject(a);
        for (e in g) if (g.hasOwnProperty(e)) for (d = g[e].length; d--; ) c = g[e][d], 
        c.once === !0 && this.removeListener(a, c.listener), f = c.listener.apply(this, b || []), 
        f === this._getOnceReturnValue() && this.removeListener(a, c.listener);
        return this;
    }, d.trigger = c("emitEvent"), d.emit = function(a) {
        var b = Array.prototype.slice.call(arguments, 1);
        return this.emitEvent(a, b);
    }, d.setOnceReturnValue = function(a) {
        return this._onceReturnValue = a, this;
    }, d._getOnceReturnValue = function() {
        return this.hasOwnProperty("_onceReturnValue") ? this._onceReturnValue : !0;
    }, d._getEvents = function() {
        return this._events || (this._events = {});
    }, a.noConflict = function() {
        return e.EventEmitter = f, a;
    }, "function" == typeof define && define.amd ? define("eventEmitter/EventEmitter", [], function() {
        return a;
    }) : "object" == typeof module && module.exports ? module.exports = a : e.EventEmitter = a;
}.call(this), function(a, b) {
    "function" == typeof define && define.amd ? define("unipointer/unipointer", [ "eventEmitter/EventEmitter", "eventie/eventie" ], function(c, d) {
        return b(a, c, d);
    }) : "object" == typeof exports ? module.exports = b(a, require("wolfy87-eventemitter"), require("eventie")) : a.Unipointer = b(a, a.EventEmitter, a.eventie);
}(window, function(a, b, c) {
    function d() {}
    function e() {}
    e.prototype = new b(), e.prototype.bindStartEvent = function(a) {
        this._bindStartEvent(a, !0);
    }, e.prototype.unbindStartEvent = function(a) {
        this._bindStartEvent(a, !1);
    }, e.prototype._bindStartEvent = function(b, d) {
        d = void 0 === d ? !0 : !!d;
        var e = d ? "bind" : "unbind";
        a.navigator.pointerEnabled ? c[e](b, "pointerdown", this) : a.navigator.msPointerEnabled ? c[e](b, "MSPointerDown", this) : (c[e](b, "mousedown", this), 
        c[e](b, "touchstart", this));
    }, e.prototype.handleEvent = function(a) {
        var b = "on" + a.type;
        this[b] && this[b](a);
    }, e.prototype.getTouch = function(a) {
        for (var b = 0, c = a.length; c > b; b++) {
            var d = a[b];
            if (d.identifier == this.pointerIdentifier) return d;
        }
    }, e.prototype.onmousedown = function(a) {
        var b = a.button;
        b && 0 !== b && 1 !== b || this._pointerDown(a, a);
    }, e.prototype.ontouchstart = function(a) {
        this._pointerDown(a, a.changedTouches[0]);
    }, e.prototype.onMSPointerDown = e.prototype.onpointerdown = function(a) {
        this._pointerDown(a, a);
    }, e.prototype._pointerDown = function(a, b) {
        this.isPointerDown || (this.isPointerDown = !0, this.pointerIdentifier = void 0 !== b.pointerId ? b.pointerId : b.identifier, 
        this.pointerDown(a, b));
    }, e.prototype.pointerDown = function(a, b) {
        this._bindPostStartEvents(a), this.emitEvent("pointerDown", [ a, b ]);
    };
    var f = {
        mousedown: [ "mousemove", "mouseup" ],
        touchstart: [ "touchmove", "touchend", "touchcancel" ],
        pointerdown: [ "pointermove", "pointerup", "pointercancel" ],
        MSPointerDown: [ "MSPointerMove", "MSPointerUp", "MSPointerCancel" ]
    };
    return e.prototype._bindPostStartEvents = function(b) {
        if (b) {
            for (var d = f[b.type], e = b.preventDefault ? a : document, g = 0, h = d.length; h > g; g++) {
                var i = d[g];
                c.bind(e, i, this);
            }
            this._boundPointerEvents = {
                events: d,
                node: e
            };
        }
    }, e.prototype._unbindPostStartEvents = function() {
        var a = this._boundPointerEvents;
        if (a && a.events) {
            for (var b = 0, d = a.events.length; d > b; b++) {
                var e = a.events[b];
                c.unbind(a.node, e, this);
            }
            delete this._boundPointerEvents;
        }
    }, e.prototype.onmousemove = function(a) {
        this._pointerMove(a, a);
    }, e.prototype.onMSPointerMove = e.prototype.onpointermove = function(a) {
        a.pointerId == this.pointerIdentifier && this._pointerMove(a, a);
    }, e.prototype.ontouchmove = function(a) {
        var b = this.getTouch(a.changedTouches);
        b && this._pointerMove(a, b);
    }, e.prototype._pointerMove = function(a, b) {
        this.pointerMove(a, b);
    }, e.prototype.pointerMove = function(a, b) {
        this.emitEvent("pointerMove", [ a, b ]);
    }, e.prototype.onmouseup = function(a) {
        this._pointerUp(a, a);
    }, e.prototype.onMSPointerUp = e.prototype.onpointerup = function(a) {
        a.pointerId == this.pointerIdentifier && this._pointerUp(a, a);
    }, e.prototype.ontouchend = function(a) {
        var b = this.getTouch(a.changedTouches);
        b && this._pointerUp(a, b);
    }, e.prototype._pointerUp = function(a, b) {
        this._pointerDone(), this.pointerUp(a, b);
    }, e.prototype.pointerUp = function(a, b) {
        this.emitEvent("pointerUp", [ a, b ]);
    }, e.prototype._pointerDone = function() {
        this.isPointerDown = !1, delete this.pointerIdentifier, this._unbindPostStartEvents(), 
        this.pointerDone();
    }, e.prototype.pointerDone = d, e.prototype.onMSPointerCancel = e.prototype.onpointercancel = function(a) {
        a.pointerId == this.pointerIdentifier && this._pointerCancel(a, a);
    }, e.prototype.ontouchcancel = function(a) {
        var b = this.getTouch(a.changedTouches);
        b && this._pointerCancel(a, b);
    }, e.prototype._pointerCancel = function(a, b) {
        this._pointerDone(), this.pointerCancel(a, b);
    }, e.prototype.pointerCancel = function(a, b) {
        this.emitEvent("pointerCancel", [ a, b ]);
    }, e.getPointerPoint = function(a) {
        return {
            x: void 0 !== a.pageX ? a.pageX : a.clientX,
            y: void 0 !== a.pageY ? a.pageY : a.clientY
        };
    }, e;
}), function(a, b) {
    "function" == typeof define && define.amd ? define("unidragger/unidragger", [ "eventie/eventie", "unipointer/unipointer" ], function(c, d) {
        return b(a, c, d);
    }) : "object" == typeof exports ? module.exports = b(a, require("eventie"), require("unipointer")) : a.Unidragger = b(a, a.eventie, a.Unipointer);
}(window, function(a, b, c) {
    function d() {}
    function e(a) {
        a.preventDefault ? a.preventDefault() : a.returnValue = !1;
    }
    function f(a) {
        for (;a != document.body; ) if (a = a.parentNode, "A" == a.nodeName) return a;
    }
    function g() {}
    function h() {
        return !1;
    }
    g.prototype = new c(), g.prototype.bindHandles = function() {
        this._bindHandles(!0);
    }, g.prototype.unbindHandles = function() {
        this._bindHandles(!1);
    };
    var i = a.navigator;
    g.prototype._bindHandles = function(a) {
        a = void 0 === a ? !0 : !!a;
        var c;
        c = i.pointerEnabled ? function(b) {
            b.style.touchAction = a ? "none" : "";
        } : i.msPointerEnabled ? function(b) {
            b.style.msTouchAction = a ? "none" : "";
        } : function() {
            a && k(g);
        };
        for (var d = a ? "bind" : "unbind", e = 0, f = this.handles.length; f > e; e++) {
            var g = this.handles[e];
            this._bindStartEvent(g, a), c(g), b[d](g, "click", this);
        }
    };
    var j = "attachEvent" in document.documentElement, k = j ? function(a) {
        "IMG" == a.nodeName && (a.ondragstart = h);
        for (var b = a.querySelectorAll("img"), c = 0, d = b.length; d > c; c++) {
            var e = b[c];
            e.ondragstart = h;
        }
    } : d, l = g.allowTouchstartNodes = {
        INPUT: !0,
        A: !0,
        BUTTON: !0,
        SELECT: !0
    };
    return g.prototype.pointerDown = function(a, b) {
        this._dragPointerDown(a, b);
        var c = document.activeElement;
        c && c.blur && c.blur(), this._bindPostStartEvents(a), this.emitEvent("pointerDown", [ a, b ]);
    }, g.prototype._dragPointerDown = function(a, b) {
        this.pointerDownPoint = c.getPointerPoint(b);
        var d = a.target.nodeName, g = "touchstart" == a.type && (l[d] || f(a.target));
        g || "SELECT" == d || e(a);
    }, g.prototype.pointerMove = function(a, b) {
        var c = this._dragPointerMove(a, b);
        this.emitEvent("pointerMove", [ a, b, c ]), this._dragMove(a, b, c);
    }, g.prototype._dragPointerMove = function(a, b) {
        var d = c.getPointerPoint(b), e = {
            x: d.x - this.pointerDownPoint.x,
            y: d.y - this.pointerDownPoint.y
        };
        return !this.isDragging && this.hasDragStarted(e) && this._dragStart(a, b), e;
    }, g.prototype.hasDragStarted = function(a) {
        return Math.abs(a.x) > 3 || Math.abs(a.y) > 3;
    }, g.prototype.pointerUp = function(a, b) {
        this.emitEvent("pointerUp", [ a, b ]), this._dragPointerUp(a, b);
    }, g.prototype._dragPointerUp = function(a, b) {
        this.isDragging ? this._dragEnd(a, b) : this._staticClick(a, b);
    }, g.prototype._dragStart = function(a, b) {
        this.isDragging = !0, this.dragStartPoint = g.getPointerPoint(b), this.isPreventingClicks = !0, 
        this.dragStart(a, b);
    }, g.prototype.dragStart = function(a, b) {
        this.emitEvent("dragStart", [ a, b ]);
    }, g.prototype._dragMove = function(a, b, c) {
        this.isDragging && this.dragMove(a, b, c);
    }, g.prototype.dragMove = function(a, b, c) {
        this.emitEvent("dragMove", [ a, b, c ]);
    }, g.prototype._dragEnd = function(a, b) {
        this.isDragging = !1;
        var c = this;
        setTimeout(function() {
            delete c.isPreventingClicks;
        }), this.dragEnd(a, b);
    }, g.prototype.dragEnd = function(a, b) {
        this.emitEvent("dragEnd", [ a, b ]);
    }, g.prototype.onclick = function(a) {
        this.isPreventingClicks && e(a);
    }, g.prototype._staticClick = function(a, b) {
        "INPUT" == a.target.nodeName && "text" == a.target.type && a.target.focus(), this.staticClick(a, b);
    }, g.prototype.staticClick = function(a, b) {
        this.emitEvent("staticClick", [ a, b ]);
    }, g.getPointerPoint = function(a) {
        return {
            x: void 0 !== a.pageX ? a.pageX : a.clientX,
            y: void 0 !== a.pageY ? a.pageY : a.clientY
        };
    }, g.getPointerPoint = c.getPointerPoint, g;
}), function(a, b) {
    "function" == typeof define && define.amd ? define("draggabilly/draggabilly", [ "classie/classie", "get-style-property/get-style-property", "get-size/get-size", "unidragger/unidragger" ], function(c, d, e, f) {
        return b(a, c, d, e, f);
    }) : "object" == typeof exports ? module.exports = b(a, require("desandro-classie"), require("desandro-get-style-property"), require("get-size"), require("unidragger")) : a.Draggabilly = b(a, a.classie, a.getStyleProperty, a.getSize, a.Unidragger);
}(window, function(a, b, c, d, e) {
    function f() {}
    function g(a, b) {
        for (var c in b) a[c] = b[c];
        return a;
    }
    function h(a, b) {
        this.element = "string" == typeof a ? k.querySelector(a) : a, v && (this.$element = v(this.element)), 
        this.options = g({}, this.constructor.defaults), this.option(b), this._create();
    }
    function i(a, b, c) {
        return c = c || "round", b ? Math[c](a / b) * b : a;
    }
    for (var j, k = a.document, l = k.defaultView, m = l && l.getComputedStyle ? function(a) {
        return l.getComputedStyle(a, null);
    } : function(a) {
        return a.currentStyle;
    }, n = "object" == typeof HTMLElement ? function(a) {
        return a instanceof HTMLElement;
    } : function(a) {
        return a && "object" == typeof a && 1 == a.nodeType && "string" == typeof a.nodeName;
    }, o = 0, p = "webkit moz ms o".split(" "), q = a.requestAnimationFrame, r = a.cancelAnimationFrame, s = 0; s < p.length && (!q || !r); s++) j = p[s], 
    q = q || a[j + "RequestAnimationFrame"], r = r || a[j + "CancelAnimationFrame"] || a[j + "CancelRequestAnimationFrame"];
    q && r || (q = function(b) {
        var c = new Date().getTime(), d = Math.max(0, 16 - (c - o)), e = a.setTimeout(function() {
            b(c + d);
        }, d);
        return o = c + d, e;
    }, r = function(b) {
        a.clearTimeout(b);
    });
    var t = c("transform"), u = !!c("perspective"), v = a.jQuery;
    g(h.prototype, e.prototype), h.defaults = {}, h.prototype.option = function(a) {
        g(this.options, a);
    }, h.prototype._create = function() {
        this.position = {}, this._getPosition(), this.startPoint = {
            x: 0,
            y: 0
        }, this.dragPoint = {
            x: 0,
            y: 0
        }, this.startPosition = g({}, this.position);
        var a = m(this.element);
        "relative" != a.position && "absolute" != a.position && (this.element.style.position = "relative"), 
        this.enable(), this.setHandles();
    }, h.prototype.setHandles = function() {
        this.handles = this.options.handle ? this.element.querySelectorAll(this.options.handle) : [ this.element ], 
        this.bindHandles();
    }, h.prototype.dispatchEvent = function(b, c, d) {
        var e = [ c ].concat(d);
        this.emitEvent(b, e);
        var f = a.jQuery;
        if (f && this.$element) if (c) {
            var g = f.Event(c);
            g.type = b, this.$element.trigger(g, d);
        } else this.$element.trigger(b, d);
    }, h.prototype._getPosition = function() {
        var a = m(this.element), b = parseInt(a.left, 10), c = parseInt(a.top, 10);
        this.position.x = isNaN(b) ? 0 : b, this.position.y = isNaN(c) ? 0 : c, this._addTransformPosition(a);
    }, h.prototype._addTransformPosition = function(a) {
        if (t) {
            var b = a[t];
            if (0 === b.indexOf("matrix")) {
                var c = b.split(","), d = 0 === b.indexOf("matrix3d") ? 12 : 4, e = parseInt(c[d], 10), f = parseInt(c[d + 1], 10);
                this.position.x += e, this.position.y += f;
            }
        }
    }, h.prototype.pointerDown = function(a, c) {
        this._dragPointerDown(a, c);
        var d = k.activeElement;
        d && d.blur && d.blur(), this._bindPostStartEvents(a), b.add(this.element, "is-pointer-down"), 
        this.dispatchEvent("pointerDown", a, [ c ]);
    }, h.prototype.pointerMove = function(a, b) {
        var c = this._dragPointerMove(a, b);
        this.dispatchEvent("pointerMove", a, [ b, c ]), this._dragMove(a, b, c);
    }, h.prototype.dragStart = function(a, c) {
        this.isEnabled && (this._getPosition(), this.measureContainment(), this.startPosition.x = this.position.x, 
        this.startPosition.y = this.position.y, this.setLeftTop(), this.dragPoint.x = 0, 
        this.dragPoint.y = 0, this.isDragging = !0, b.add(this.element, "is-dragging"), 
        this.dispatchEvent("dragStart", a, [ c ]), this.animate());
    }, h.prototype.measureContainment = function() {
        var a = this.options.containment;
        if (a) {
            this.size = d(this.element);
            var b = this.element.getBoundingClientRect(), c = n(a) ? a : "string" == typeof a ? k.querySelector(a) : this.element.parentNode;
            this.containerSize = d(c);
            var e = c.getBoundingClientRect();
            this.relativeStartPosition = {
                x: b.left - e.left,
                y: b.top - e.top
            };
        }
    }, h.prototype.dragMove = function(a, b, c) {
        if (this.isEnabled) {
            var d = c.x, e = c.y, f = this.options.grid, g = f && f[0], h = f && f[1];
            d = i(d, g), e = i(e, h), d = this.containDrag("x", d, g), e = this.containDrag("y", e, h), 
            d = "y" == this.options.axis ? 0 : d, e = "x" == this.options.axis ? 0 : e, this.position.x = this.startPosition.x + d, 
            this.position.y = this.startPosition.y + e, this.dragPoint.x = d, this.dragPoint.y = e, 
            this.dispatchEvent("dragMove", a, [ b, c ]);
        }
    }, h.prototype.containDrag = function(a, b, c) {
        if (!this.options.containment) return b;
        var d = "x" == a ? "width" : "height", e = this.relativeStartPosition[a], f = i(-e, c, "ceil"), g = this.containerSize[d] - e - this.size[d];
        return g = i(g, c, "floor"), Math.min(g, Math.max(f, b));
    }, h.prototype.pointerUp = function(a, c) {
        b.remove(this.element, "is-pointer-down"), this.dispatchEvent("pointerUp", a, [ c ]), 
        this._dragPointerUp(a, c);
    }, h.prototype.dragEnd = function(a, c) {
        this.isEnabled && (this.isDragging = !1, t && (this.element.style[t] = "", this.setLeftTop()), 
        b.remove(this.element, "is-dragging"), this.dispatchEvent("dragEnd", a, [ c ]));
    }, h.prototype.animate = function() {
        if (this.isDragging) {
            this.positionDrag();
            var a = this;
            q(function() {
                a.animate();
            });
        }
    };
    var w = u ? function(a, b) {
        return "translate3d( " + a + "px, " + b + "px, 0)";
    } : function(a, b) {
        return "translate( " + a + "px, " + b + "px)";
    };
    return h.prototype.setLeftTop = function() {
        this.element.style.left = this.position.x + "px", this.element.style.top = this.position.y + "px";
    }, h.prototype.positionDrag = t ? function() {
        this.element.style[t] = w(this.dragPoint.x, this.dragPoint.y);
    } : h.prototype.setLeftTop, h.prototype.staticClick = function(a, b) {
        this.dispatchEvent("staticClick", a, [ b ]);
    }, h.prototype.enable = function() {
        this.isEnabled = !0;
    }, h.prototype.disable = function() {
        this.isEnabled = !1, this.isDragging && this.dragEnd();
    }, h.prototype.destroy = function() {
        this.disable(), t && (this.element.style[t] = ""), this.element.style.left = "", 
        this.element.style.top = "", this.element.style.position = "", this.unbindHandles(), 
        this.$element && this.$element.removeData("draggabilly");
    }, h.prototype._init = f, v && v.bridget && v.bridget("draggabilly", h), h;
}), /*!
 * Packery PACKAGED v1.4.1
 * bin-packing layout library
 *
 * Licensed GPLv3 for open source use
 * or Flickity Commercial License for commercial use
 *
 * http://packery.metafizzy.co
 * Copyright 2015 Metafizzy
 */
function(a) {
    function b() {}
    function c(a) {
        function c(b) {
            b.prototype.option || (b.prototype.option = function(b) {
                a.isPlainObject(b) && (this.options = a.extend(!0, this.options, b));
            });
        }
        function e(b, c) {
            a.fn[b] = function(e) {
                if ("string" == typeof e) {
                    for (var g = d.call(arguments, 1), h = 0, i = this.length; i > h; h++) {
                        var j = this[h], k = a.data(j, b);
                        if (k) if (a.isFunction(k[e]) && "_" !== e.charAt(0)) {
                            var l = k[e].apply(k, g);
                            if (void 0 !== l) return l;
                        } else f("no such method '" + e + "' for " + b + " instance"); else f("cannot call methods on " + b + " prior to initialization; attempted to call '" + e + "'");
                    }
                    return this;
                }
                return this.each(function() {
                    var d = a.data(this, b);
                    d ? (d.option(e), d._init()) : (d = new c(this, e), a.data(this, b, d));
                });
            };
        }
        if (a) {
            var f = "undefined" == typeof console ? b : function(a) {
                console.error(a);
            };
            return a.bridget = function(a, b) {
                c(b), e(a, b);
            }, a.bridget;
        }
    }
    var d = Array.prototype.slice;
    "function" == typeof define && define.amd ? define("jquery-bridget/jquery.bridget", [ "jquery" ], c) : c("object" == typeof exports ? require("jquery") : a.jQuery);
}(window), function(a) {
    function b(a) {
        return RegExp("(^|\\s+)" + a + "(\\s+|$)");
    }
    function c(a, b) {
        var c = d(a, b) ? f : e;
        c(a, b);
    }
    var d, e, f;
    "classList" in document.documentElement ? (d = function(a, b) {
        return a.classList.contains(b);
    }, e = function(a, b) {
        a.classList.add(b);
    }, f = function(a, b) {
        a.classList.remove(b);
    }) : (d = function(a, c) {
        return b(c).test(a.className);
    }, e = function(a, b) {
        d(a, b) || (a.className = a.className + " " + b);
    }, f = function(a, c) {
        a.className = a.className.replace(b(c), " ");
    });
    var g = {
        hasClass: d,
        addClass: e,
        removeClass: f,
        toggleClass: c,
        has: d,
        add: e,
        remove: f,
        toggle: c
    };
    "function" == typeof define && define.amd ? define("classie/classie", g) : "object" == typeof exports ? module.exports = g : a.classie = g;
}(window), function(a) {
    function b(a) {
        if (a) {
            if ("string" == typeof d[a]) return a;
            a = a.charAt(0).toUpperCase() + a.slice(1);
            for (var b, e = 0, f = c.length; f > e; e++) if (b = c[e] + a, "string" == typeof d[b]) return b;
        }
    }
    var c = "Webkit Moz ms Ms O".split(" "), d = document.documentElement.style;
    "function" == typeof define && define.amd ? define("get-style-property/get-style-property", [], function() {
        return b;
    }) : "object" == typeof exports ? module.exports = b : a.getStyleProperty = b;
}(window), function(a) {
    function b(a) {
        var b = parseFloat(a), c = -1 === a.indexOf("%") && !isNaN(b);
        return c && b;
    }
    function c() {}
    function d() {
        for (var a = {
            width: 0,
            height: 0,
            innerWidth: 0,
            innerHeight: 0,
            outerWidth: 0,
            outerHeight: 0
        }, b = 0, c = g.length; c > b; b++) {
            var d = g[b];
            a[d] = 0;
        }
        return a;
    }
    function e(c) {
        function e() {
            if (!m) {
                m = !0;
                var d = a.getComputedStyle;
                if (j = function() {
                    var a = d ? function(a) {
                        return d(a, null);
                    } : function(a) {
                        return a.currentStyle;
                    };
                    return function(b) {
                        var c = a(b);
                        return c || f("Style returned " + c + ". Are you running this code in a hidden iframe on Firefox? See http://bit.ly/getsizebug1"), 
                        c;
                    };
                }(), k = c("boxSizing")) {
                    var e = document.createElement("div");
                    e.style.width = "200px", e.style.padding = "1px 2px 3px 4px", e.style.borderStyle = "solid", 
                    e.style.borderWidth = "1px 2px 3px 4px", e.style[k] = "border-box";
                    var g = document.body || document.documentElement;
                    g.appendChild(e);
                    var h = j(e);
                    l = 200 === b(h.width), g.removeChild(e);
                }
            }
        }
        function h(a) {
            if (e(), "string" == typeof a && (a = document.querySelector(a)), a && "object" == typeof a && a.nodeType) {
                var c = j(a);
                if ("none" === c.display) return d();
                var f = {};
                f.width = a.offsetWidth, f.height = a.offsetHeight;
                for (var h = f.isBorderBox = !(!k || !c[k] || "border-box" !== c[k]), m = 0, n = g.length; n > m; m++) {
                    var o = g[m], p = c[o];
                    p = i(a, p);
                    var q = parseFloat(p);
                    f[o] = isNaN(q) ? 0 : q;
                }
                var r = f.paddingLeft + f.paddingRight, s = f.paddingTop + f.paddingBottom, t = f.marginLeft + f.marginRight, u = f.marginTop + f.marginBottom, v = f.borderLeftWidth + f.borderRightWidth, w = f.borderTopWidth + f.borderBottomWidth, x = h && l, y = b(c.width);
                y !== !1 && (f.width = y + (x ? 0 : r + v));
                var z = b(c.height);
                return z !== !1 && (f.height = z + (x ? 0 : s + w)), f.innerWidth = f.width - (r + v), 
                f.innerHeight = f.height - (s + w), f.outerWidth = f.width + t, f.outerHeight = f.height + u, 
                f;
            }
        }
        function i(b, c) {
            if (a.getComputedStyle || -1 === c.indexOf("%")) return c;
            var d = b.style, e = d.left, f = b.runtimeStyle, g = f && f.left;
            return g && (f.left = b.currentStyle.left), d.left = c, c = d.pixelLeft, d.left = e, 
            g && (f.left = g), c;
        }
        var j, k, l, m = !1;
        return h;
    }
    var f = "undefined" == typeof console ? c : function(a) {
        console.error(a);
    }, g = [ "paddingLeft", "paddingRight", "paddingTop", "paddingBottom", "marginLeft", "marginRight", "marginTop", "marginBottom", "borderLeftWidth", "borderRightWidth", "borderTopWidth", "borderBottomWidth" ];
    "function" == typeof define && define.amd ? define("get-size/get-size", [ "get-style-property/get-style-property" ], e) : "object" == typeof exports ? module.exports = e(require("desandro-get-style-property")) : a.getSize = e(a.getStyleProperty);
}(window), function(a) {
    function b(b) {
        var c = a.event;
        return c.target = c.target || c.srcElement || b, c;
    }
    var c = document.documentElement, d = function() {};
    c.addEventListener ? d = function(a, b, c) {
        a.addEventListener(b, c, !1);
    } : c.attachEvent && (d = function(a, c, d) {
        a[c + d] = d.handleEvent ? function() {
            var c = b(a);
            d.handleEvent.call(d, c);
        } : function() {
            var c = b(a);
            d.call(a, c);
        }, a.attachEvent("on" + c, a[c + d]);
    });
    var e = function() {};
    c.removeEventListener ? e = function(a, b, c) {
        a.removeEventListener(b, c, !1);
    } : c.detachEvent && (e = function(a, b, c) {
        a.detachEvent("on" + b, a[b + c]);
        try {
            delete a[b + c];
        } catch (d) {
            a[b + c] = void 0;
        }
    });
    var f = {
        bind: d,
        unbind: e
    };
    "function" == typeof define && define.amd ? define("eventie/eventie", f) : "object" == typeof exports ? module.exports = f : a.eventie = f;
}(window), function() {
    function a() {}
    function b(a, b) {
        for (var c = a.length; c--; ) if (a[c].listener === b) return c;
        return -1;
    }
    function c(a) {
        return function() {
            return this[a].apply(this, arguments);
        };
    }
    var d = a.prototype, e = this, f = e.EventEmitter;
    d.getListeners = function(a) {
        var b, c, d = this._getEvents();
        if (a instanceof RegExp) {
            b = {};
            for (c in d) d.hasOwnProperty(c) && a.test(c) && (b[c] = d[c]);
        } else b = d[a] || (d[a] = []);
        return b;
    }, d.flattenListeners = function(a) {
        var b, c = [];
        for (b = 0; a.length > b; b += 1) c.push(a[b].listener);
        return c;
    }, d.getListenersAsObject = function(a) {
        var b, c = this.getListeners(a);
        return c instanceof Array && (b = {}, b[a] = c), b || c;
    }, d.addListener = function(a, c) {
        var d, e = this.getListenersAsObject(a), f = "object" == typeof c;
        for (d in e) e.hasOwnProperty(d) && -1 === b(e[d], c) && e[d].push(f ? c : {
            listener: c,
            once: !1
        });
        return this;
    }, d.on = c("addListener"), d.addOnceListener = function(a, b) {
        return this.addListener(a, {
            listener: b,
            once: !0
        });
    }, d.once = c("addOnceListener"), d.defineEvent = function(a) {
        return this.getListeners(a), this;
    }, d.defineEvents = function(a) {
        for (var b = 0; a.length > b; b += 1) this.defineEvent(a[b]);
        return this;
    }, d.removeListener = function(a, c) {
        var d, e, f = this.getListenersAsObject(a);
        for (e in f) f.hasOwnProperty(e) && (d = b(f[e], c), -1 !== d && f[e].splice(d, 1));
        return this;
    }, d.off = c("removeListener"), d.addListeners = function(a, b) {
        return this.manipulateListeners(!1, a, b);
    }, d.removeListeners = function(a, b) {
        return this.manipulateListeners(!0, a, b);
    }, d.manipulateListeners = function(a, b, c) {
        var d, e, f = a ? this.removeListener : this.addListener, g = a ? this.removeListeners : this.addListeners;
        if ("object" != typeof b || b instanceof RegExp) for (d = c.length; d--; ) f.call(this, b, c[d]); else for (d in b) b.hasOwnProperty(d) && (e = b[d]) && ("function" == typeof e ? f.call(this, d, e) : g.call(this, d, e));
        return this;
    }, d.removeEvent = function(a) {
        var b, c = typeof a, d = this._getEvents();
        if ("string" === c) delete d[a]; else if (a instanceof RegExp) for (b in d) d.hasOwnProperty(b) && a.test(b) && delete d[b]; else delete this._events;
        return this;
    }, d.removeAllListeners = c("removeEvent"), d.emitEvent = function(a, b) {
        var c, d, e, f, g = this.getListenersAsObject(a);
        for (e in g) if (g.hasOwnProperty(e)) for (d = g[e].length; d--; ) c = g[e][d], 
        c.once === !0 && this.removeListener(a, c.listener), f = c.listener.apply(this, b || []), 
        f === this._getOnceReturnValue() && this.removeListener(a, c.listener);
        return this;
    }, d.trigger = c("emitEvent"), d.emit = function(a) {
        var b = Array.prototype.slice.call(arguments, 1);
        return this.emitEvent(a, b);
    }, d.setOnceReturnValue = function(a) {
        return this._onceReturnValue = a, this;
    }, d._getOnceReturnValue = function() {
        return this.hasOwnProperty("_onceReturnValue") ? this._onceReturnValue : !0;
    }, d._getEvents = function() {
        return this._events || (this._events = {});
    }, a.noConflict = function() {
        return e.EventEmitter = f, a;
    }, "function" == typeof define && define.amd ? define("eventEmitter/EventEmitter", [], function() {
        return a;
    }) : "object" == typeof module && module.exports ? module.exports = a : e.EventEmitter = a;
}.call(this), function(a) {
    function b(a) {
        "function" == typeof a && (b.isReady ? a() : g.push(a));
    }
    function c(a) {
        var c = "readystatechange" === a.type && "complete" !== f.readyState;
        b.isReady || c || d();
    }
    function d() {
        b.isReady = !0;
        for (var a = 0, c = g.length; c > a; a++) {
            var d = g[a];
            d();
        }
    }
    function e(e) {
        return "complete" === f.readyState ? d() : (e.bind(f, "DOMContentLoaded", c), e.bind(f, "readystatechange", c), 
        e.bind(a, "load", c)), b;
    }
    var f = a.document, g = [];
    b.isReady = !1, "function" == typeof define && define.amd ? define("doc-ready/doc-ready", [ "eventie/eventie" ], e) : "object" == typeof exports ? module.exports = e(require("eventie")) : a.docReady = e(a.eventie);
}(window), function(a) {
    function b(a, b) {
        return a[g](b);
    }
    function c(a) {
        if (!a.parentNode) {
            var b = document.createDocumentFragment();
            b.appendChild(a);
        }
    }
    function d(a, b) {
        c(a);
        for (var d = a.parentNode.querySelectorAll(b), e = 0, f = d.length; f > e; e++) if (d[e] === a) return !0;
        return !1;
    }
    function e(a, d) {
        return c(a), b(a, d);
    }
    var f, g = function() {
        if (a.matches) return "matches";
        if (a.matchesSelector) return "matchesSelector";
        for (var b = [ "webkit", "moz", "ms", "o" ], c = 0, d = b.length; d > c; c++) {
            var e = b[c], f = e + "MatchesSelector";
            if (a[f]) return f;
        }
    }();
    if (g) {
        var h = document.createElement("div"), i = b(h, "div");
        f = i ? b : e;
    } else f = d;
    "function" == typeof define && define.amd ? define("matches-selector/matches-selector", [], function() {
        return f;
    }) : "object" == typeof exports ? module.exports = f : window.matchesSelector = f;
}(Element.prototype), function(a, b) {
    "function" == typeof define && define.amd ? define("fizzy-ui-utils/utils", [ "doc-ready/doc-ready", "matches-selector/matches-selector" ], function(c, d) {
        return b(a, c, d);
    }) : "object" == typeof exports ? module.exports = b(a, require("doc-ready"), require("desandro-matches-selector")) : a.fizzyUIUtils = b(a, a.docReady, a.matchesSelector);
}(window, function(a, b, c) {
    var d = {};
    d.extend = function(a, b) {
        for (var c in b) a[c] = b[c];
        return a;
    }, d.modulo = function(a, b) {
        return (a % b + b) % b;
    };
    var e = Object.prototype.toString;
    d.isArray = function(a) {
        return "[object Array]" == e.call(a);
    }, d.makeArray = function(a) {
        var b = [];
        if (d.isArray(a)) b = a; else if (a && "number" == typeof a.length) for (var c = 0, e = a.length; e > c; c++) b.push(a[c]); else b.push(a);
        return b;
    }, d.indexOf = Array.prototype.indexOf ? function(a, b) {
        return a.indexOf(b);
    } : function(a, b) {
        for (var c = 0, d = a.length; d > c; c++) if (a[c] === b) return c;
        return -1;
    }, d.removeFrom = function(a, b) {
        var c = d.indexOf(a, b);
        -1 != c && a.splice(c, 1);
    }, d.isElement = "function" == typeof HTMLElement || "object" == typeof HTMLElement ? function(a) {
        return a instanceof HTMLElement;
    } : function(a) {
        return a && "object" == typeof a && 1 == a.nodeType && "string" == typeof a.nodeName;
    }, d.setText = function() {
        function a(a, c) {
            b = b || (void 0 !== document.documentElement.textContent ? "textContent" : "innerText"), 
            a[b] = c;
        }
        var b;
        return a;
    }(), d.getParent = function(a, b) {
        for (;a != document.body; ) if (a = a.parentNode, c(a, b)) return a;
    }, d.getQueryElement = function(a) {
        return "string" == typeof a ? document.querySelector(a) : a;
    }, d.handleEvent = function(a) {
        var b = "on" + a.type;
        this[b] && this[b](a);
    }, d.filterFindElements = function(a, b) {
        a = d.makeArray(a);
        for (var e = [], f = 0, g = a.length; g > f; f++) {
            var h = a[f];
            if (d.isElement(h)) if (b) {
                c(h, b) && e.push(h);
                for (var i = h.querySelectorAll(b), j = 0, k = i.length; k > j; j++) e.push(i[j]);
            } else e.push(h);
        }
        return e;
    }, d.debounceMethod = function(a, b, c) {
        var d = a.prototype[b], e = b + "Timeout";
        a.prototype[b] = function() {
            var a = this[e];
            a && clearTimeout(a);
            var b = arguments, f = this;
            this[e] = setTimeout(function() {
                d.apply(f, b), delete f[e];
            }, c || 100);
        };
    }, d.toDashed = function(a) {
        return a.replace(/(.)([A-Z])/g, function(a, b, c) {
            return b + "-" + c;
        }).toLowerCase();
    };
    var f = a.console;
    return d.htmlInit = function(c, e) {
        b(function() {
            for (var b = d.toDashed(e), g = document.querySelectorAll(".js-" + b), h = "data-" + b + "-options", i = 0, j = g.length; j > i; i++) {
                var k, l = g[i], m = l.getAttribute(h);
                try {
                    k = m && JSON.parse(m);
                } catch (n) {
                    f && f.error("Error parsing " + h + " on " + l.nodeName.toLowerCase() + (l.id ? "#" + l.id : "") + ": " + n);
                    continue;
                }
                var o = new c(l, k), p = a.jQuery;
                p && p.data(l, e, o);
            }
        });
    }, d;
}), function(a, b) {
    "function" == typeof define && define.amd ? define("outlayer/item", [ "eventEmitter/EventEmitter", "get-size/get-size", "get-style-property/get-style-property", "fizzy-ui-utils/utils" ], function(c, d, e, f) {
        return b(a, c, d, e, f);
    }) : "object" == typeof exports ? module.exports = b(a, require("wolfy87-eventemitter"), require("get-size"), require("desandro-get-style-property"), require("fizzy-ui-utils")) : (a.Outlayer = {}, 
    a.Outlayer.Item = b(a, a.EventEmitter, a.getSize, a.getStyleProperty, a.fizzyUIUtils));
}(window, function(a, b, c, d, e) {
    function f(a) {
        for (var b in a) return !1;
        return b = null, !0;
    }
    function g(a, b) {
        a && (this.element = a, this.layout = b, this.position = {
            x: 0,
            y: 0
        }, this._create());
    }
    var h = a.getComputedStyle, i = h ? function(a) {
        return h(a, null);
    } : function(a) {
        return a.currentStyle;
    }, j = d("transition"), k = d("transform"), l = j && k, m = !!d("perspective"), n = {
        WebkitTransition: "webkitTransitionEnd",
        MozTransition: "transitionend",
        OTransition: "otransitionend",
        transition: "transitionend"
    }[j], o = [ "transform", "transition", "transitionDuration", "transitionProperty" ], p = function() {
        for (var a = {}, b = 0, c = o.length; c > b; b++) {
            var e = o[b], f = d(e);
            f && f !== e && (a[e] = f);
        }
        return a;
    }();
    e.extend(g.prototype, b.prototype), g.prototype._create = function() {
        this._transn = {
            ingProperties: {},
            clean: {},
            onEnd: {}
        }, this.css({
            position: "absolute"
        });
    }, g.prototype.handleEvent = function(a) {
        var b = "on" + a.type;
        this[b] && this[b](a);
    }, g.prototype.getSize = function() {
        this.size = c(this.element);
    }, g.prototype.css = function(a) {
        var b = this.element.style;
        for (var c in a) {
            var d = p[c] || c;
            b[d] = a[c];
        }
    }, g.prototype.getPosition = function() {
        var a = i(this.element), b = this.layout.options, c = b.isOriginLeft, d = b.isOriginTop, e = parseInt(a[c ? "left" : "right"], 10), f = parseInt(a[d ? "top" : "bottom"], 10);
        e = isNaN(e) ? 0 : e, f = isNaN(f) ? 0 : f;
        var g = this.layout.size;
        e -= c ? g.paddingLeft : g.paddingRight, f -= d ? g.paddingTop : g.paddingBottom, 
        this.position.x = e, this.position.y = f;
    }, g.prototype.layoutPosition = function() {
        var a = this.layout.size, b = this.layout.options, c = {}, d = b.isOriginLeft ? "paddingLeft" : "paddingRight", e = b.isOriginLeft ? "left" : "right", f = b.isOriginLeft ? "right" : "left", g = this.position.x + a[d];
        g = b.percentPosition && !b.isHorizontal ? 100 * (g / a.width) + "%" : g + "px", 
        c[e] = g, c[f] = "";
        var h = b.isOriginTop ? "paddingTop" : "paddingBottom", i = b.isOriginTop ? "top" : "bottom", j = b.isOriginTop ? "bottom" : "top", k = this.position.y + a[h];
        k = b.percentPosition && b.isHorizontal ? 100 * (k / a.height) + "%" : k + "px", 
        c[i] = k, c[j] = "", this.css(c), this.emitEvent("layout", [ this ]);
    };
    var q = m ? function(a, b) {
        return "translate3d(" + a + "px, " + b + "px, 0)";
    } : function(a, b) {
        return "translate(" + a + "px, " + b + "px)";
    };
    g.prototype._transitionTo = function(a, b) {
        this.getPosition();
        var c = this.position.x, d = this.position.y, e = parseInt(a, 10), f = parseInt(b, 10), g = e === this.position.x && f === this.position.y;
        if (this.setPosition(a, b), g && !this.isTransitioning) return void this.layoutPosition();
        var h = a - c, i = b - d, j = {}, k = this.layout.options;
        h = k.isOriginLeft ? h : -h, i = k.isOriginTop ? i : -i, j.transform = q(h, i), 
        this.transition({
            to: j,
            onTransitionEnd: {
                transform: this.layoutPosition
            },
            isCleaning: !0
        });
    }, g.prototype.goTo = function(a, b) {
        this.setPosition(a, b), this.layoutPosition();
    }, g.prototype.moveTo = l ? g.prototype._transitionTo : g.prototype.goTo, g.prototype.setPosition = function(a, b) {
        this.position.x = parseInt(a, 10), this.position.y = parseInt(b, 10);
    }, g.prototype._nonTransition = function(a) {
        this.css(a.to), a.isCleaning && this._removeStyles(a.to);
        for (var b in a.onTransitionEnd) a.onTransitionEnd[b].call(this);
    }, g.prototype._transition = function(a) {
        if (!parseFloat(this.layout.options.transitionDuration)) return void this._nonTransition(a);
        var b = this._transn;
        for (var c in a.onTransitionEnd) b.onEnd[c] = a.onTransitionEnd[c];
        for (c in a.to) b.ingProperties[c] = !0, a.isCleaning && (b.clean[c] = !0);
        if (a.from) {
            this.css(a.from);
            var d = this.element.offsetHeight;
            d = null;
        }
        this.enableTransition(a.to), this.css(a.to), this.isTransitioning = !0;
    };
    var r = k && e.toDashed(k) + ",opacity";
    g.prototype.enableTransition = function() {
        this.isTransitioning || (this.css({
            transitionProperty: r,
            transitionDuration: this.layout.options.transitionDuration
        }), this.element.addEventListener(n, this, !1));
    }, g.prototype.transition = g.prototype[j ? "_transition" : "_nonTransition"], g.prototype.onwebkitTransitionEnd = function(a) {
        this.ontransitionend(a);
    }, g.prototype.onotransitionend = function(a) {
        this.ontransitionend(a);
    };
    var s = {
        "-webkit-transform": "transform",
        "-moz-transform": "transform",
        "-o-transform": "transform"
    };
    g.prototype.ontransitionend = function(a) {
        if (a.target === this.element) {
            var b = this._transn, c = s[a.propertyName] || a.propertyName;
            if (delete b.ingProperties[c], f(b.ingProperties) && this.disableTransition(), c in b.clean && (this.element.style[a.propertyName] = "", 
            delete b.clean[c]), c in b.onEnd) {
                var d = b.onEnd[c];
                d.call(this), delete b.onEnd[c];
            }
            this.emitEvent("transitionEnd", [ this ]);
        }
    }, g.prototype.disableTransition = function() {
        this.removeTransitionStyles(), this.element.removeEventListener(n, this, !1), this.isTransitioning = !1;
    }, g.prototype._removeStyles = function(a) {
        var b = {};
        for (var c in a) b[c] = "";
        this.css(b);
    };
    var t = {
        transitionProperty: "",
        transitionDuration: ""
    };
    return g.prototype.removeTransitionStyles = function() {
        this.css(t);
    }, g.prototype.removeElem = function() {
        this.element.parentNode.removeChild(this.element), this.css({
            display: ""
        }), this.emitEvent("remove", [ this ]);
    }, g.prototype.remove = function() {
        if (!j || !parseFloat(this.layout.options.transitionDuration)) return void this.removeElem();
        var a = this;
        this.once("transitionEnd", function() {
            a.removeElem();
        }), this.hide();
    }, g.prototype.reveal = function() {
        delete this.isHidden, this.css({
            display: ""
        });
        var a = this.layout.options, b = {}, c = this.getHideRevealTransitionEndProperty("visibleStyle");
        b[c] = this.onRevealTransitionEnd, this.transition({
            from: a.hiddenStyle,
            to: a.visibleStyle,
            isCleaning: !0,
            onTransitionEnd: b
        });
    }, g.prototype.onRevealTransitionEnd = function() {
        this.isHidden || this.emitEvent("reveal");
    }, g.prototype.getHideRevealTransitionEndProperty = function(a) {
        var b = this.layout.options[a];
        if (b.opacity) return "opacity";
        for (var c in b) return c;
    }, g.prototype.hide = function() {
        this.isHidden = !0, this.css({
            display: ""
        });
        var a = this.layout.options, b = {}, c = this.getHideRevealTransitionEndProperty("hiddenStyle");
        b[c] = this.onHideTransitionEnd, this.transition({
            from: a.visibleStyle,
            to: a.hiddenStyle,
            isCleaning: !0,
            onTransitionEnd: b
        });
    }, g.prototype.onHideTransitionEnd = function() {
        this.isHidden && (this.css({
            display: "none"
        }), this.emitEvent("hide"));
    }, g.prototype.destroy = function() {
        this.css({
            position: "",
            left: "",
            right: "",
            top: "",
            bottom: "",
            transition: "",
            transform: ""
        });
    }, g;
}), function(a, b) {
    "function" == typeof define && define.amd ? define("outlayer/outlayer", [ "eventie/eventie", "eventEmitter/EventEmitter", "get-size/get-size", "fizzy-ui-utils/utils", "./item" ], function(c, d, e, f, g) {
        return b(a, c, d, e, f, g);
    }) : "object" == typeof exports ? module.exports = b(a, require("eventie"), require("wolfy87-eventemitter"), require("get-size"), require("fizzy-ui-utils"), require("./item")) : a.Outlayer = b(a, a.eventie, a.EventEmitter, a.getSize, a.fizzyUIUtils, a.Outlayer.Item);
}(window, function(a, b, c, d, e, f) {
    function g(a, b) {
        var c = e.getQueryElement(a);
        if (!c) return void (h && h.error("Bad element for " + this.constructor.namespace + ": " + (c || a)));
        this.element = c, i && (this.$element = i(this.element)), this.options = e.extend({}, this.constructor.defaults), 
        this.option(b);
        var d = ++k;
        this.element.outlayerGUID = d, l[d] = this, this._create(), this.options.isInitLayout && this.layout();
    }
    var h = a.console, i = a.jQuery, j = function() {}, k = 0, l = {};
    return g.namespace = "outlayer", g.Item = f, g.defaults = {
        containerStyle: {
            position: "relative"
        },
        isInitLayout: !0,
        isOriginLeft: !0,
        isOriginTop: !0,
        isResizeBound: !0,
        isResizingContainer: !0,
        transitionDuration: "0.4s",
        hiddenStyle: {
            opacity: 0,
            transform: "scale(0.001)"
        },
        visibleStyle: {
            opacity: 1,
            transform: "scale(1)"
        }
    }, e.extend(g.prototype, c.prototype), g.prototype.option = function(a) {
        e.extend(this.options, a);
    }, g.prototype._create = function() {
        this.reloadItems(), this.stamps = [], this.stamp(this.options.stamp), e.extend(this.element.style, this.options.containerStyle), 
        this.options.isResizeBound && this.bindResize();
    }, g.prototype.reloadItems = function() {
        this.items = this._itemize(this.element.children);
    }, g.prototype._itemize = function(a) {
        for (var b = this._filterFindItemElements(a), c = this.constructor.Item, d = [], e = 0, f = b.length; f > e; e++) {
            var g = b[e], h = new c(g, this);
            d.push(h);
        }
        return d;
    }, g.prototype._filterFindItemElements = function(a) {
        return e.filterFindElements(a, this.options.itemSelector);
    }, g.prototype.getItemElements = function() {
        for (var a = [], b = 0, c = this.items.length; c > b; b++) a.push(this.items[b].element);
        return a;
    }, g.prototype.layout = function() {
        this._resetLayout(), this._manageStamps();
        var a = void 0 !== this.options.isLayoutInstant ? this.options.isLayoutInstant : !this._isLayoutInited;
        this.layoutItems(this.items, a), this._isLayoutInited = !0;
    }, g.prototype._init = g.prototype.layout, g.prototype._resetLayout = function() {
        this.getSize();
    }, g.prototype.getSize = function() {
        this.size = d(this.element);
    }, g.prototype._getMeasurement = function(a, b) {
        var c, f = this.options[a];
        f ? ("string" == typeof f ? c = this.element.querySelector(f) : e.isElement(f) && (c = f), 
        this[a] = c ? d(c)[b] : f) : this[a] = 0;
    }, g.prototype.layoutItems = function(a, b) {
        a = this._getItemsForLayout(a), this._layoutItems(a, b), this._postLayout();
    }, g.prototype._getItemsForLayout = function(a) {
        for (var b = [], c = 0, d = a.length; d > c; c++) {
            var e = a[c];
            e.isIgnored || b.push(e);
        }
        return b;
    }, g.prototype._layoutItems = function(a, b) {
        if (this._emitCompleteOnItems("layout", a), a && a.length) {
            for (var c = [], d = 0, e = a.length; e > d; d++) {
                var f = a[d], g = this._getItemLayoutPosition(f);
                g.item = f, g.isInstant = b || f.isLayoutInstant, c.push(g);
            }
            this._processLayoutQueue(c);
        }
    }, g.prototype._getItemLayoutPosition = function() {
        return {
            x: 0,
            y: 0
        };
    }, g.prototype._processLayoutQueue = function(a) {
        for (var b = 0, c = a.length; c > b; b++) {
            var d = a[b];
            this._positionItem(d.item, d.x, d.y, d.isInstant);
        }
    }, g.prototype._positionItem = function(a, b, c, d) {
        d ? a.goTo(b, c) : a.moveTo(b, c);
    }, g.prototype._postLayout = function() {
        this.resizeContainer();
    }, g.prototype.resizeContainer = function() {
        if (this.options.isResizingContainer) {
            var a = this._getContainerSize();
            a && (this._setContainerMeasure(a.width, !0), this._setContainerMeasure(a.height, !1));
        }
    }, g.prototype._getContainerSize = j, g.prototype._setContainerMeasure = function(a, b) {
        if (void 0 !== a) {
            var c = this.size;
            c.isBorderBox && (a += b ? c.paddingLeft + c.paddingRight + c.borderLeftWidth + c.borderRightWidth : c.paddingBottom + c.paddingTop + c.borderTopWidth + c.borderBottomWidth), 
            a = Math.max(a, 0), this.element.style[b ? "width" : "height"] = a + "px";
        }
    }, g.prototype._emitCompleteOnItems = function(a, b) {
        function c() {
            e.emitEvent(a + "Complete", [ b ]);
        }
        function d() {
            g++, g === f && c();
        }
        var e = this, f = b.length;
        if (!b || !f) return void c();
        for (var g = 0, h = 0, i = b.length; i > h; h++) {
            var j = b[h];
            j.once(a, d);
        }
    }, g.prototype.ignore = function(a) {
        var b = this.getItem(a);
        b && (b.isIgnored = !0);
    }, g.prototype.unignore = function(a) {
        var b = this.getItem(a);
        b && delete b.isIgnored;
    }, g.prototype.stamp = function(a) {
        if (a = this._find(a)) {
            this.stamps = this.stamps.concat(a);
            for (var b = 0, c = a.length; c > b; b++) {
                var d = a[b];
                this.ignore(d);
            }
        }
    }, g.prototype.unstamp = function(a) {
        if (a = this._find(a)) for (var b = 0, c = a.length; c > b; b++) {
            var d = a[b];
            e.removeFrom(this.stamps, d), this.unignore(d);
        }
    }, g.prototype._find = function(a) {
        return a ? ("string" == typeof a && (a = this.element.querySelectorAll(a)), a = e.makeArray(a)) : void 0;
    }, g.prototype._manageStamps = function() {
        if (this.stamps && this.stamps.length) {
            this._getBoundingRect();
            for (var a = 0, b = this.stamps.length; b > a; a++) {
                var c = this.stamps[a];
                this._manageStamp(c);
            }
        }
    }, g.prototype._getBoundingRect = function() {
        var a = this.element.getBoundingClientRect(), b = this.size;
        this._boundingRect = {
            left: a.left + b.paddingLeft + b.borderLeftWidth,
            top: a.top + b.paddingTop + b.borderTopWidth,
            right: a.right - (b.paddingRight + b.borderRightWidth),
            bottom: a.bottom - (b.paddingBottom + b.borderBottomWidth)
        };
    }, g.prototype._manageStamp = j, g.prototype._getElementOffset = function(a) {
        var b = a.getBoundingClientRect(), c = this._boundingRect, e = d(a), f = {
            left: b.left - c.left - e.marginLeft,
            top: b.top - c.top - e.marginTop,
            right: c.right - b.right - e.marginRight,
            bottom: c.bottom - b.bottom - e.marginBottom
        };
        return f;
    }, g.prototype.handleEvent = function(a) {
        var b = "on" + a.type;
        this[b] && this[b](a);
    }, g.prototype.bindResize = function() {
        this.isResizeBound || (b.bind(a, "resize", this), this.isResizeBound = !0);
    }, g.prototype.unbindResize = function() {
        this.isResizeBound && b.unbind(a, "resize", this), this.isResizeBound = !1;
    }, g.prototype.onresize = function() {
        function a() {
            b.resize(), delete b.resizeTimeout;
        }
        this.resizeTimeout && clearTimeout(this.resizeTimeout);
        var b = this;
        this.resizeTimeout = setTimeout(a, 100);
    }, g.prototype.resize = function() {
        this.isResizeBound && this.needsResizeLayout() && this.layout();
    }, g.prototype.needsResizeLayout = function() {
        var a = d(this.element), b = this.size && a;
        return b && a.innerWidth !== this.size.innerWidth;
    }, g.prototype.addItems = function(a) {
        var b = this._itemize(a);
        return b.length && (this.items = this.items.concat(b)), b;
    }, g.prototype.appended = function(a) {
        var b = this.addItems(a);
        b.length && (this.layoutItems(b, !0), this.reveal(b));
    }, g.prototype.prepended = function(a) {
        var b = this._itemize(a);
        if (b.length) {
            var c = this.items.slice(0);
            this.items = b.concat(c), this._resetLayout(), this._manageStamps(), this.layoutItems(b, !0), 
            this.reveal(b), this.layoutItems(c);
        }
    }, g.prototype.reveal = function(a) {
        this._emitCompleteOnItems("reveal", a);
        for (var b = a && a.length, c = 0; b && b > c; c++) {
            var d = a[c];
            d.reveal();
        }
    }, g.prototype.hide = function(a) {
        this._emitCompleteOnItems("hide", a);
        for (var b = a && a.length, c = 0; b && b > c; c++) {
            var d = a[c];
            d.hide();
        }
    }, g.prototype.revealItemElements = function(a) {
        var b = this.getItems(a);
        this.reveal(b);
    }, g.prototype.hideItemElements = function(a) {
        var b = this.getItems(a);
        this.hide(b);
    }, g.prototype.getItem = function(a) {
        for (var b = 0, c = this.items.length; c > b; b++) {
            var d = this.items[b];
            if (d.element === a) return d;
        }
    }, g.prototype.getItems = function(a) {
        a = e.makeArray(a);
        for (var b = [], c = 0, d = a.length; d > c; c++) {
            var f = a[c], g = this.getItem(f);
            g && b.push(g);
        }
        return b;
    }, g.prototype.remove = function(a) {
        var b = this.getItems(a);
        if (this._emitCompleteOnItems("remove", b), b && b.length) for (var c = 0, d = b.length; d > c; c++) {
            var f = b[c];
            f.remove(), e.removeFrom(this.items, f);
        }
    }, g.prototype.destroy = function() {
        var a = this.element.style;
        a.height = "", a.position = "", a.width = "";
        for (var b = 0, c = this.items.length; c > b; b++) {
            var d = this.items[b];
            d.destroy();
        }
        this.unbindResize();
        var e = this.element.outlayerGUID;
        delete l[e], delete this.element.outlayerGUID, i && i.removeData(this.element, this.constructor.namespace);
    }, g.data = function(a) {
        a = e.getQueryElement(a);
        var b = a && a.outlayerGUID;
        return b && l[b];
    }, g.create = function(a, b) {
        function c() {
            g.apply(this, arguments);
        }
        return Object.create ? c.prototype = Object.create(g.prototype) : e.extend(c.prototype, g.prototype), 
        c.prototype.constructor = c, c.defaults = e.extend({}, g.defaults), e.extend(c.defaults, b), 
        c.prototype.settings = {}, c.namespace = a, c.data = g.data, c.Item = function() {
            f.apply(this, arguments);
        }, c.Item.prototype = new f(), e.htmlInit(c, a), i && i.bridget && i.bridget(a, c), 
        c;
    }, g.Item = f, g;
}), function(a, b) {
    "function" == typeof define && define.amd ? define("packery/js/rect", b) : "object" == typeof exports ? module.exports = b() : (a.Packery = a.Packery || {}, 
    a.Packery.Rect = b());
}(window, function() {
    function a(b) {
        for (var c in a.defaults) this[c] = a.defaults[c];
        for (c in b) this[c] = b[c];
    }
    var b = window.Packery = function() {};
    return b.Rect = a, a.defaults = {
        x: 0,
        y: 0,
        width: 0,
        height: 0
    }, a.prototype.contains = function(a) {
        var b = a.width || 0, c = a.height || 0;
        return this.x <= a.x && this.y <= a.y && this.x + this.width >= a.x + b && this.y + this.height >= a.y + c;
    }, a.prototype.overlaps = function(a) {
        var b = this.x + this.width, c = this.y + this.height, d = a.x + a.width, e = a.y + a.height;
        return d > this.x && b > a.x && e > this.y && c > a.y;
    }, a.prototype.getMaximalFreeRects = function(b) {
        if (!this.overlaps(b)) return !1;
        var c, d = [], e = this.x + this.width, f = this.y + this.height, g = b.x + b.width, h = b.y + b.height;
        return this.y < b.y && (c = new a({
            x: this.x,
            y: this.y,
            width: this.width,
            height: b.y - this.y
        }), d.push(c)), e > g && (c = new a({
            x: g,
            y: this.y,
            width: e - g,
            height: this.height
        }), d.push(c)), f > h && (c = new a({
            x: this.x,
            y: h,
            width: this.width,
            height: f - h
        }), d.push(c)), this.x < b.x && (c = new a({
            x: this.x,
            y: this.y,
            width: b.x - this.x,
            height: this.height
        }), d.push(c)), d;
    }, a.prototype.canFit = function(a) {
        return this.width >= a.width && this.height >= a.height;
    }, a;
}), function(a, b) {
    if ("function" == typeof define && define.amd) define("packery/js/packer", [ "./rect" ], b); else if ("object" == typeof exports) module.exports = b(require("./rect")); else {
        var c = a.Packery = a.Packery || {};
        c.Packer = b(c.Rect);
    }
}(window, function(a) {
    function b(a, b, c) {
        this.width = a || 0, this.height = b || 0, this.sortDirection = c || "downwardLeftToRight", 
        this.reset();
    }
    b.prototype.reset = function() {
        this.spaces = [], this.newSpaces = [];
        var b = new a({
            x: 0,
            y: 0,
            width: this.width,
            height: this.height
        });
        this.spaces.push(b), this.sorter = c[this.sortDirection] || c.downwardLeftToRight;
    }, b.prototype.pack = function(a) {
        for (var b = 0, c = this.spaces.length; c > b; b++) {
            var d = this.spaces[b];
            if (d.canFit(a)) {
                this.placeInSpace(a, d);
                break;
            }
        }
    }, b.prototype.placeInSpace = function(a, b) {
        a.x = b.x, a.y = b.y, this.placed(a);
    }, b.prototype.placed = function(a) {
        for (var b = [], c = 0, d = this.spaces.length; d > c; c++) {
            var e = this.spaces[c], f = e.getMaximalFreeRects(a);
            f ? b.push.apply(b, f) : b.push(e);
        }
        this.spaces = b, this.mergeSortSpaces();
    }, b.prototype.mergeSortSpaces = function() {
        b.mergeRects(this.spaces), this.spaces.sort(this.sorter);
    }, b.prototype.addSpace = function(a) {
        this.spaces.push(a), this.mergeSortSpaces();
    }, b.mergeRects = function(a) {
        for (var b = 0, c = a.length; c > b; b++) {
            var d = a[b];
            if (d) {
                var e = a.slice(0);
                e.splice(b, 1);
                for (var f = 0, g = 0, h = e.length; h > g; g++) {
                    var i = e[g], j = b > g ? 0 : 1;
                    d.contains(i) && (a.splice(g + j - f, 1), f++);
                }
            }
        }
        return a;
    };
    var c = {
        downwardLeftToRight: function(a, b) {
            return a.y - b.y || a.x - b.x;
        },
        rightwardTopToBottom: function(a, b) {
            return a.x - b.x || a.y - b.y;
        }
    };
    return b;
}), function(a, b) {
    "function" == typeof define && define.amd ? define("packery/js/item", [ "get-style-property/get-style-property", "outlayer/outlayer", "./rect" ], b) : "object" == typeof exports ? module.exports = b(require("desandro-get-style-property"), require("outlayer"), require("./rect")) : a.Packery.Item = b(a.getStyleProperty, a.Outlayer, a.Packery.Rect);
}(window, function(a, b, c) {
    var d = a("transform"), e = function() {
        b.Item.apply(this, arguments);
    };
    e.prototype = new b.Item();
    var f = e.prototype._create;
    return e.prototype._create = function() {
        f.call(this), this.rect = new c(), this.placeRect = new c();
    }, e.prototype.dragStart = function() {
        this.getPosition(), this.removeTransitionStyles(), this.isTransitioning && d && (this.element.style[d] = "none"), 
        this.getSize(), this.isPlacing = !0, this.needsPositioning = !1, this.positionPlaceRect(this.position.x, this.position.y), 
        this.isTransitioning = !1, this.didDrag = !1;
    }, e.prototype.dragMove = function(a, b) {
        this.didDrag = !0;
        var c = this.layout.size;
        a -= c.paddingLeft, b -= c.paddingTop, this.positionPlaceRect(a, b);
    }, e.prototype.dragStop = function() {
        this.getPosition();
        var a = this.position.x != this.placeRect.x, b = this.position.y != this.placeRect.y;
        this.needsPositioning = a || b, this.didDrag = !1;
    }, e.prototype.positionPlaceRect = function(a, b, c) {
        this.placeRect.x = this.getPlaceRectCoord(a, !0), this.placeRect.y = this.getPlaceRectCoord(b, !1, c);
    }, e.prototype.getPlaceRectCoord = function(a, b, c) {
        var d = b ? "Width" : "Height", e = this.size["outer" + d], f = this.layout[b ? "columnWidth" : "rowHeight"], g = this.layout.size["inner" + d];
        b || (g = Math.max(g, this.layout.maxY), this.layout.rowHeight || (g -= this.layout.gutter));
        var h;
        if (f) {
            f += this.layout.gutter, g += b ? this.layout.gutter : 0, a = Math.round(a / f);
            var i;
            i = this.layout.options.isHorizontal ? b ? "ceil" : "floor" : b ? "floor" : "ceil";
            var j = Math[i](g / f);
            j -= Math.ceil(e / f), h = j;
        } else h = g - e;
        return a = c ? a : Math.min(a, h), a *= f || 1, Math.max(0, a);
    }, e.prototype.copyPlaceRectPosition = function() {
        this.rect.x = this.placeRect.x, this.rect.y = this.placeRect.y;
    }, e.prototype.removeElem = function() {
        this.element.parentNode.removeChild(this.element), this.layout.packer.addSpace(this.rect), 
        this.emitEvent("remove", [ this ]);
    }, e;
}), function(a, b) {
    "function" == typeof define && define.amd ? define([ "classie/classie", "get-size/get-size", "outlayer/outlayer", "packery/js/rect", "packery/js/packer", "packery/js/item" ], b) : "object" == typeof exports ? module.exports = b(require("desandro-classie"), require("get-size"), require("outlayer"), require("./rect"), require("./packer"), require("./item")) : a.Packery = b(a.classie, a.getSize, a.Outlayer, a.Packery.Rect, a.Packery.Packer, a.Packery.Item);
}(window, function(a, b, c, d, e, f) {
    function g(a, b) {
        return a.position.y - b.position.y || a.position.x - b.position.x;
    }
    function h(a, b) {
        return a.position.x - b.position.x || a.position.y - b.position.y;
    }
    d.prototype.canFit = function(a) {
        return this.width >= a.width - 1 && this.height >= a.height - 1;
    };
    var i = c.create("packery");
    return i.Item = f, i.prototype._create = function() {
        c.prototype._create.call(this), this.packer = new e(), this.stamp(this.options.stamped);
        var a = this;
        this.handleDraggabilly = {
            dragStart: function() {
                a.itemDragStart(this.element);
            },
            dragMove: function() {
                a.itemDragMove(this.element, this.position.x, this.position.y);
            },
            dragEnd: function() {
                a.itemDragEnd(this.element);
            }
        }, this.handleUIDraggable = {
            start: function(b) {
                a.itemDragStart(b.currentTarget);
            },
            drag: function(b, c) {
                a.itemDragMove(b.currentTarget, c.position.left, c.position.top);
            },
            stop: function(b) {
                a.itemDragEnd(b.currentTarget);
            }
        };
    }, i.prototype._resetLayout = function() {
        this.getSize(), this._getMeasurements();
        var a = this.packer;
        this.options.isHorizontal ? (a.width = Number.POSITIVE_INFINITY, a.height = this.size.innerHeight + this.gutter, 
        a.sortDirection = "rightwardTopToBottom") : (a.width = this.size.innerWidth + this.gutter, 
        a.height = Number.POSITIVE_INFINITY, a.sortDirection = "downwardLeftToRight"), a.reset(), 
        this.maxY = 0, this.maxX = 0;
    }, i.prototype._getMeasurements = function() {
        this._getMeasurement("columnWidth", "width"), this._getMeasurement("rowHeight", "height"), 
        this._getMeasurement("gutter", "width");
    }, i.prototype._getItemLayoutPosition = function(a) {
        return this._packItem(a), a.rect;
    }, i.prototype._packItem = function(a) {
        this._setRectSize(a.element, a.rect), this.packer.pack(a.rect), this._setMaxXY(a.rect);
    }, i.prototype._setMaxXY = function(a) {
        this.maxX = Math.max(a.x + a.width, this.maxX), this.maxY = Math.max(a.y + a.height, this.maxY);
    }, i.prototype._setRectSize = function(a, c) {
        var d = b(a), e = d.outerWidth, f = d.outerHeight;
        (e || f) && (e = this._applyGridGutter(e, this.columnWidth), f = this._applyGridGutter(f, this.rowHeight)), 
        c.width = Math.min(e, this.packer.width), c.height = Math.min(f, this.packer.height);
    }, i.prototype._applyGridGutter = function(a, b) {
        if (!b) return a + this.gutter;
        b += this.gutter;
        var c = a % b, d = c && 1 > c ? "round" : "ceil";
        return a = Math[d](a / b) * b;
    }, i.prototype._getContainerSize = function() {
        return this.options.isHorizontal ? {
            width: this.maxX - this.gutter
        } : {
            height: this.maxY - this.gutter
        };
    }, i.prototype._manageStamp = function(a) {
        var b, c = this.getItem(a);
        if (c && c.isPlacing) b = c.placeRect; else {
            var e = this._getElementOffset(a);
            b = new d({
                x: this.options.isOriginLeft ? e.left : e.right,
                y: this.options.isOriginTop ? e.top : e.bottom
            });
        }
        this._setRectSize(a, b), this.packer.placed(b), this._setMaxXY(b);
    }, i.prototype.sortItemsByPosition = function() {
        var a = this.options.isHorizontal ? h : g;
        this.items.sort(a);
    }, i.prototype.fit = function(a, b, c) {
        var d = this.getItem(a);
        d && (this._getMeasurements(), this.stamp(d.element), d.getSize(), d.isPlacing = !0, 
        b = void 0 === b ? d.rect.x : b, c = void 0 === c ? d.rect.y : c, d.positionPlaceRect(b, c, !0), 
        this._bindFitEvents(d), d.moveTo(d.placeRect.x, d.placeRect.y), this.layout(), this.unstamp(d.element), 
        this.sortItemsByPosition(), d.isPlacing = !1, d.copyPlaceRectPosition());
    }, i.prototype._bindFitEvents = function(a) {
        function b() {
            d++, 2 == d && c.emitEvent("fitComplete", [ a ]);
        }
        var c = this, d = 0;
        a.on("layout", function() {
            return b(), !0;
        }), this.on("layoutComplete", function() {
            return b(), !0;
        });
    }, i.prototype.resize = function() {
        var a = b(this.element), c = this.size && a, d = this.options.isHorizontal ? "innerHeight" : "innerWidth";
        c && a[d] == this.size[d] || this.layout();
    }, i.prototype.itemDragStart = function(a) {
        this.stamp(a);
        var b = this.getItem(a);
        b && b.dragStart();
    }, i.prototype.itemDragMove = function(a, b, c) {
        function d() {
            f.layout(), delete f.dragTimeout;
        }
        var e = this.getItem(a);
        e && e.dragMove(b, c);
        var f = this;
        this.clearDragTimeout(), this.dragTimeout = setTimeout(d, 40);
    }, i.prototype.clearDragTimeout = function() {
        this.dragTimeout && clearTimeout(this.dragTimeout);
    }, i.prototype.itemDragEnd = function(b) {
        var c, d = this.getItem(b);
        if (d && (c = d.didDrag, d.dragStop()), !d || !c && !d.needsPositioning) return void this.unstamp(b);
        a.add(d.element, "is-positioning-post-drag");
        var e = this._getDragEndLayoutComplete(b, d);
        d.needsPositioning ? (d.on("layout", e), d.moveTo(d.placeRect.x, d.placeRect.y)) : d && d.copyPlaceRectPosition(), 
        this.clearDragTimeout(), this.on("layoutComplete", e), this.layout();
    }, i.prototype._getDragEndLayoutComplete = function(b, c) {
        var d = c && c.needsPositioning, e = 0, f = d ? 2 : 1, g = this;
        return function() {
            return e++, e != f ? !0 : (c && (a.remove(c.element, "is-positioning-post-drag"), 
            c.isPlacing = !1, c.copyPlaceRectPosition()), g.unstamp(b), g.sortItemsByPosition(), 
            d && g.emitEvent("dragItemPositioned", [ c ]), !0);
        };
    }, i.prototype.bindDraggabillyEvents = function(a) {
        a.on("dragStart", this.handleDraggabilly.dragStart), a.on("dragMove", this.handleDraggabilly.dragMove), 
        a.on("dragEnd", this.handleDraggabilly.dragEnd);
    }, i.prototype.bindUIDraggableEvents = function(a) {
        a.on("dragstart", this.handleUIDraggable.start).on("drag", this.handleUIDraggable.drag).on("dragstop", this.handleUIDraggable.stop);
    }, i.Rect = d, i.Packer = e, i;
}), function a(b, c, d) {
    function e(g, h) {
        if (!c[g]) {
            if (!b[g]) {
                var i = "function" == typeof require && require;
                if (!h && i) return i(g, !0);
                if (f) return f(g, !0);
                var j = new Error("Cannot find module '" + g + "'");
                throw j.code = "MODULE_NOT_FOUND", j;
            }
            var k = c[g] = {
                exports: {}
            };
            b[g][0].call(k.exports, function(a) {
                var c = b[g][1][a];
                return e(c ? c : a);
            }, k, k.exports, a, b, c, d);
        }
        return c[g].exports;
    }
    for (var f = "function" == typeof require && require, g = 0; g < d.length; g++) e(d[g]);
    return e;
}({
    1: [ function(a) {
        /* Import dependencies */
        "use strict";
        function b(a) {
            return a && a.__esModule ? a : {
                "default": a
            };
        }
        var c = a("./utils/elements"), d = a("./utils/constants"), e = a("./utils/helper"), f = a("./views/dialog.settings"), g = b(f), h = a("./views/dialog.information"), i = b(h), j = a("./modules/timer"), k = b(j), l = a("./modules/dialog"), m = b(l), n = a("./modules/card"), o = b(n), p = a("./modules/layoutmanager"), q = b(p), r = a("./modules/snackbar"), s = b(r), t = null, u = null, v = 0, w = function() {
            var a = new s["default"]();
            v && a.alert(navigator.onLine ? "Your internet connection is stable again, awesome!" : "Your internet connection suddenly went offline. BrowDash will still work like before, but some cards might not update."), 
            v++;
        }, x = function() {
            t = new k["default"](c.timer);
            var a = {
                dateFormat: null,
                abbreviations: !1
            };
            localStorage[d.BROW_SETTINGS] ? (a = JSON.parse(localStorage[d.BROW_SETTINGS]), 
            t.setDateFormat({
                format: a.dateFormat,
                abbreviations: a.abbreviations
            })) : (a.dateFormat = "24h", t.setDateFormat({
                format: a.dateFormat
            }), localStorage.setItem(d.BROW_SETTINGS, JSON.stringify(a))), t.run();
        }, y = function(a) {
            switch (a) {
              case "settings":
                return g["default"];

              case "info":
                return i["default"];

              default:
                return !1;
            }
        }, z = function() {
            var a = window.location.href.slice(0, -1);
            [].forEach.call(c.openDialog, function(b) {
                var d = b.getAttribute("data-dialog"), e = new m["default"]({
                    elem: b,
                    dialogElem: c.dialog,
                    content: a + "/markup/dialog-" + d + ".html",
                    callback: y(d),
                    params: {
                        browTimer: t
                    }
                });
                e.init();
            });
        }, A = function(a) {
            var b = JSON.parse(localStorage.getItem(localStorage.key(a)));
            if (b.module) {
                var d = new o["default"]({
                    type: b.type,
                    guid: b.guid,
                    content: b.content,
                    style: b.style
                });
                c.content.appendChild(d);
            }
        }, B = function() {
            u = new q["default"](c.content, c.contentOverlay), u.layout();
        }, C = function() {
            if (!localStorage[d.BROW_CARDS] || localStorage.length <= 1) {
                localStorage.setItem(d.BROW_CARDS, !0);
                var a = new o["default"]({
                    type: "text"
                });
                c.content.appendChild(a);
            } else for (var b = 0; b < localStorage.length; b++) A(b);
        }, D = function(a) {
            a.preventDefault();
            var b = this.getAttribute("data-create-card"), d = new o["default"]({
                type: "" + b
            });
            c.content.appendChild(d), u.add(d);
        }, E = function() {
            window.addEventListener("online", w), window.addEventListener("offline", w), [].forEach.call(c.newCard, function(a) {
                a.addEventListener("click", D);
            });
        };
        /* Initialise app */
        window.isEditMode = !1, C(), x(), B(), z(), w(), e.setTheme(), E();
    }, {
        "./modules/card": 2,
        "./modules/dialog": 3,
        "./modules/layoutmanager": 4,
        "./modules/snackbar": 5,
        "./modules/timer": 6,
        "./utils/constants": 7,
        "./utils/elements": 8,
        "./utils/helper": 9,
        "./views/dialog.information": 10,
        "./views/dialog.settings": 11
    } ],
    2: [ function(a, b, c) {
        /**
 * @name				Card
 * @description	/
 */
        "use strict";
        function d(a, b) {
            if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function");
        }
        c.__esModule = !0;
        var e = function() {
            function a() {
                var b = void 0 === arguments[0] ? {} : arguments[0];
                return d(this, a), this.config = b, this.elem = this.createCard(), this.initialiseCard(), 
                console.log(this), this.elem;
            }
            /**
  * @description	Returns a new card element.
  * @return 			{HTMLElement}
  */
            /**
  * @description	Applies class element and calls initialise().
  */
            return a.prototype.createCard = function() {
                switch (this.config.type) {
                  case "text":
                    return document.createElement("text-card");

                  case "weather":
                    return document.createElement("weather-card");

                  case "todo":
                    return document.createElement("todo-card");

                  case "calculator":
                    return document.createElement("calculator-card");

                  default:
                    return document.createElement("text-card");
                }
            }, a.prototype.initialiseCard = function() {
                this.elem.initialise(this.config), this.elem.classList.add("brow-content__module");
            }, a;
        }();
        c["default"] = e, b.exports = c["default"];
    }, {} ],
    3: [ function(a, b, c) {
        /**
 * @name				Dialog
 * @description	Shows/hides the dialog.
 */
        "use strict";
        function d(a, b) {
            if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function");
        }
        c.__esModule = !0;
        var e = function() {
            function a(b) {
                d(this, a), this.elem = b.elem, this.button = this.elem.children[0], this.initButtonIcon = this.button.getAttribute("icon"), 
                this.path = b.content, this.callback = b.callback, this.callbackParams = b.params, 
                this.dialogElem = b.dialogElem, this.dialogContainer = this.dialogElem.querySelector(".dialog__inner"), 
                this.dialogContent = null, this.isActive = !1;
            }
            /**
  *	@description	Loads the content
  * @param			{Object} event
  */
            /**
  *	@description	Closes the dialog
  * @param			{Object} event
 */
            /**
  *	@description	Validates if dialog is visible or not, closes/loads it.
  * @param			{Object} event
  */
            /**
  *	@description	Adds events
  */
            return a.prototype.init = function() {
                this.addEvents();
            }, a.prototype.loadContent = function(a) {
                var b = this;
                a.preventDefault(), fetch(this.path).then(function(a) {
                    return a.text();
                }).then(function(a) {
                    b.dialogContainer.innerHTML = a, b.dialogContent = b.dialogContainer.querySelector(".dialog__content"), 
                    b.button.setAttribute("icon", "close"), b.button.setAttribute("color", "white"), 
                    document.body.classList.add("dialog-is-visible"), b.isActive = !0, b.callback && b.callback(b);
                });
            }, a.prototype.closeDialog = function(a) {
                var b = document.body.classList.contains("dialog-is-visible"), c = a.target === this.elem, d = 27 === a.keyCode;
                (this.isActive && b && c || d) && (// Clear DOM
                this.dialogContainer.innerHTML = null, // Reset button
                this.button.setAttribute("icon", this.initButtonIcon), this.button.removeAttribute("color"), 
                // Remove class
                document.body.classList.remove("dialog-is-visible"));
            }, a.prototype.loadOrCloseContent = function(a) {
                var b = document.body.classList.contains("dialog-is-visible");
                this.elem.blur(), b ? this.closeDialog(a) : this.loadContent(a);
            }, a.prototype.addEvents = function() {
                this.elem.addEventListener("click", this.loadOrCloseContent.bind(this)), window.addEventListener("keydown", this.closeDialog.bind(this));
            }, a;
        }();
        c["default"] = e, b.exports = c["default"];
    }, {} ],
    4: [ function(a, b, c) {
        /*globals Packery,Draggabilly*/
        "use strict";
        function d(a, b) {
            if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function");
        }
        c.__esModule = !0;
        var e = a("../utils/helper"), f = function() {
            function a(b, c) {
                d(this, a), this.transition = 0, this.dragOptions = {
                    handle: ".brow-content__module /deep/ .dragg-area"
                }, this.pkrOptions = {
                    itemSelector: ".brow-content__module",
                    transitionDuration: this.transition,
                    columnWidth: ".brow-content--sizer",
                    gutter: ".brow-content--gutter",
                    stamp: ".is-stamp",
                    isInitLayout: !1
                }, this.packery = new Packery(b, this.pkrOptions), this.content = b, this.overlay = c, 
                this.addEvents(), this.addDraggabilly();
            }
            /**
  * @description	Will initialise the Packery layout.
  */
            /**
  * @description	Adds a new item to the Packery layout.
  * @param 			{NodeList|HTMLElement} elem
  */
            /**
  * @description	Removes passed element from the Packery layout.
  * @param 			{NodeList|HTMLElement} config
  */
            /**
  * @description	Makes an element sticky.
  * @param 			{NodeList|HTMLElement} config
  */
            /**
  * @description	Unstamps an element.
  * @param 			{NodeList|HTMLElement} config
  */
            /**
  * @description	Initialises Draggabilly.
  */
            /**
  * @description	Adds EventListener.
  */
            /**
  * @description	Deactivates editMode and removes classes from content overlay.
  */
            /**
  * @description	Checks event type and validates the layout's state.
  * @param  			{Object} event
  */
            /**
  * @description	Checks if editMode is active and weither disables or enables the dragging.
  */
            return a.prototype.layout = function() {
                this.packery.layout();
            }, a.prototype.add = function(a) {
                this.packery.appended(a), this.addDraggabilly();
            }, a.prototype.remove = function(a) {
                this.packery.remove(a), this.layout();
            }, a.prototype.stamp = function(a) {
                this.packery.stamp(a);
            }, a.prototype.unstamp = function(a) {
                this.packery.unstamp(a);
            }, a.prototype.addDraggabilly = function() {
                var a = this, b = this.packery.getItemElements();
                b.forEach(function(b) {
                    var c = new Draggabilly(b, a.dragOptions);
                    a.packery.bindDraggabillyEvents(c), c.on("pointerDown", a.validateEditMode.bind(c));
                });
            }, a.prototype.addEvents = function() {
                window.addEventListener("card-edit", this.validateLayoutState.bind(this)), window.addEventListener("card-save", this.validateLayoutState.bind(this)), 
                window.addEventListener("card-remove", this.validateLayoutState.bind(this)), this.overlay.addEventListener("click", this.validateLayoutState.bind(this));
            }, a.prototype.deactivateEditMode = function() {
                var a = this;
                window.isEditMode = !1, this.overlay.classList.add("is-fading"), setTimeout(function() {
                    a.overlay.classList.remove("is-visible", "is-fading");
                }, 100);
            }, a.prototype.validateLayoutState = function(a) {
                var b = document.querySelector('[data-guid="' + a.detail + '"]');
                // activated editing mode
                "card-edit" === a.type && (window.isEditMode = !0, this.overlay.classList.add("is-visible")), 
                // saved card or remove card
                "card-save" === a.type || "card-remove" === a.type ? (this.deactivateEditMode(), 
                "card-save" === a.type && (this.layout(), e.hasCustomCards()), "card-remove" === a.type && this.remove(b)) : "click" === a.type && window.isEditMode && (b = this.content.querySelector(".is-edit"), 
                b.saveToStorage(), b.classList.remove("fx", "is-edit"), this.deactivateEditMode());
            }, a.prototype.validateEditMode = function() {
                window.isEditMode ? this.disable() : this.enable();
            }, a;
        }();
        c["default"] = f, b.exports = c["default"];
    }, {
        "../utils/helper": 9
    } ],
    5: [ function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function");
        }
        c.__esModule = !0;
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), 
                    Object.defineProperty(a, d.key, d);
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c), d && a(b, d), b;
            };
        }(), f = a("../utils/elements"), g = function() {
            function a() {
                d(this, a), this.duration = 1e4, this.elem = f.snackbar, this["default"] = "Ooops, something went wrong! :(", 
                this.message = null;
            }
            return a.prototype.alert = function() {
                var a = void 0 === arguments[0] ? this["default"] : arguments[0];
                this.message = a.trim(), this.show();
            }, a.prototype.show = function() {
                var a = this;
                this.elem.innerHTML = null, this.elem.appendChild(this.createParagraph()), this.elem.classList.add("is-visible"), 
                setTimeout(function() {
                    a.elem.classList.remove("is-visible"), a.message = null;
                }, this.duration);
            }, a.prototype.createParagraph = function() {
                var a = document.createElement("p");
                return a.innerText = this.message, a;
            }, e(a, [ {
                key: "setDuration",
                set: function(a) {
                    this.duration = a;
                }
            } ]), a;
        }();
        c["default"] = g, b.exports = c["default"];
    }, {
        "../utils/elements": 8
    } ],
    6: [ function(a, b, c) {
        /**
 * @name				Timer
 * @description	Class which appends a time string to an element
 *              	and updates it every second.
 */
        "use strict";
        function d(a, b) {
            if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function");
        }
        c.__esModule = !0;
        var e = function() {
            function a(b) {
                if (d(this, a), !b || !b.nodeName) throw new Error("You haven't passed a valid HTMLElement!");
                this.update = 1e3, this.elem = b, this.format = "24h", this.abbreviations = !1;
            }
            /**
  * @description	Creates a string with current time in HH:MM:SS
  * @return			{String}
  */
            /**
  * @description	Validates number and returns either AM or PM.
  * @param 			{Number} time
  * @return			{String}
  */
            /**
  *	@description	Needs to be written.
  * @param			{Object} config
  */
            /**
  * @description	Sets the element in which the time should be displayed.
  * @param			{Element} elem
  * @return 			{HTMLElement}
  */
            return a.prototype.getTime = function() {
                var a = new Date(), b = a.getHours(), c = a.getMinutes(), d = a.getSeconds(), e = "";
                // If time format is set to 12h, use 12h-system.
                // Add '0' if below 10
                return "12h" === this.format && (this.abbreviations && (e = this.getAbbreviation(b)), 
                b = b % 12 ? b % 12 : 12), 10 > b && (b = "0" + b), 10 > c && (c = "0" + c), 10 > d && (d = "0" + d), 
                b + ":" + c + ":" + d + " " + e;
            }, a.prototype.getAbbreviation = function(a) {
                return "number" != typeof a && (a = parseFloat(a)), a >= 12 ? "PM" : "AM";
            }, a.prototype.setDateFormat = function(a) {
                a && (this.format = a.format ? a.format : this.format, this.abbreviations = a.abbreviations), 
                this.run();
            }, a.prototype.run = function() {
                var a = this;
                return this.elem.textContent = this.getTime(), setInterval(function() {
                    a.elem.textContent = a.getTime();
                }, this.update), this.elem;
            }, a;
        }();
        c["default"] = e, b.exports = c["default"];
    }, {} ],
    7: [ function(a, b, c) {
        "use strict";
        c.__esModule = !0;
        var d = "BROW_SETTINGS";
        c.BROW_SETTINGS = d;
        var e = "BROW_THEME";
        c.BROW_KEY = e;
        var f = "BROW_CARDS";
        c.BROW_CARDS = f;
        var g = "blue-a400";
        c.DEFAULT_THEME = g;
    }, {} ],
    8: [ function(a, b, c) {
        "use strict";
        c.__esModule = !0;
        var d = document.querySelector(".js-timer");
        c.timer = d;
        var e = document.querySelector(".js-dialog");
        c.dialog = e;
        var f = document.querySelector(".js-cardlist");
        c.cardlist = f;
        var g = document.querySelector(".js-content");
        c.content = g;
        var h = document.querySelector(".content__overlay");
        c.contentOverlay = h;
        var i = document.querySelectorAll(".open-dialog");
        c.openDialog = i;
        var j = document.querySelectorAll(".js-newcard");
        c.newCard = j;
        var k = document.querySelector(".js-selection");
        c.selectionList = k;
        var l = document.querySelector(".js-snackbar");
        c.snackbar = l;
    }, {} ],
    9: [ function(a, b, c) {
        "use strict";
        c.__esModule = !0;
        var d = a("./constants"), e = function() {
            var a = !1;
            if (localStorage[d.BROW_SETTINGS]) {
                var b = JSON.parse(localStorage[d.BROW_SETTINGS]);
                a = !!b.theme;
            }
            return a;
        }, f = function() {
            localStorage[d.BROW_CARDS] || (localStorage[d.BROW_CARDS] = !0);
        }, g = function() {
            for (var a = /theme-.*/, b = 0; b < document.body.classList.length; b++) a.test(document.body.classList[b]) && document.body.classList.remove(document.body.classList[b]);
        }, h = function() {
            var a = JSON.parse(localStorage[d.BROW_SETTINGS]);
            //let dialogIsOpen = document.body.classList.contains('dialog-is-visible');
            g(), document.body.classList.add("theme-" + a.theme.color), e() && a.theme.headerbar && document.body.classList.add("theme-headerbar");
        }, i = function(a) {
            document.body.classList.add("theme-" + a);
        }, j = function(a) {
            a && "string" == typeof a || (a = d.DEFAULT_THEME), e() ? h() : i(a);
        };
        c.isCustomTheme = e, c.hasCustomCards = f, c.setTheme = j, c.updateThemeFromConfig = i, 
        c.updateThemeFromStorage = h;
    }, {
        "./constants": 7
    } ],
    10: [ function(a, b, c) {
        /**
 * @description	Returns current active list item
 * @return 			{HTMLElement}
 */
        "use strict";
        c.__esModule = !0;
        var d = function(a) {
            return a.querySelector(".dialog__sidebar li.is-active a");
        }, e = function(a) {
            return a.querySelector("section.is-visible");
        }, f = function(a) {
            var b = d(a), c = e(a), f = b.getAttribute("data-section"), g = a.querySelector('section[data-section="' + f + '"]');
            c && c.classList.remove("is-visible"), g.classList.add("is-visible");
        }, g = function(a) {
            a.preventDefault();
            var b = a.target, c = d(this.categoryList).parentNode;
            b.parentNode.classList.contains("is-active") || (c.classList.remove("is-active"), 
            b.parentNode.classList.add("is-active"), f(this.dialogContent));
        }, h = function() {
            this.categoryList = this.dialogContent.querySelector(".dialog__sidebar ul"), f(this.dialogContent), 
            this.categoryList.addEventListener("click", g.bind(this));
        };
        c["default"] = h, b.exports = c["default"];
    }, {} ],
    11: [ function(a, b, c) {
        "use strict";
        c.__esModule = !0;
        var d = a("../utils/constants"), e = a("../utils/helper"), f = function(a) {
            var b = this.dialogContent.querySelector("#settings--coloredhead"), c = JSON.parse(localStorage[d.BROW_SETTINGS]);
            // If no theme settings are stored yet.
            c.theme || (c.theme = {
                color: d.DEFAULT_THEME,
                headerbar: !1
            }), // Is theme option
            a.target.hasAttribute("data-settings-theme") && (c.theme.color = a.target.getAttribute("data-settings-theme")), 
            // If colored header bar is clicked
            "settings--coloredhead" === a.target.id && (c.theme.headerbar = b.checked), localStorage.setItem(d.BROW_SETTINGS, JSON.stringify(c)), 
            e.setTheme();
        }, g = function(a) {
            var b = this.dialogContent.querySelector("#settings--dateformat"), c = this.dialogContent.querySelector("#settings--ampm"), e = "24h", f = JSON.parse(localStorage[d.BROW_SETTINGS]);
            // If date format checkbox is clicked
            "settings--dateformat" === a.target.id && (b.checked ? b.checked && !c.disabled && (c.disabled = !0, 
            c.checked = !1) : (e = "12h", c.disabled = !1), this.callbackParams.browTimer.setDateFormat({
                format: e
            }), f.dateFormat = e, f.abbreviations = c.checked), // If abbreviation checkbox is clicked
            a.target.disabled || "settings--ampm" !== a.target.id || (this.callbackParams.browTimer.setDateFormat({
                abbreviations: c.checked
            }), f.abbreviations = c.checked), localStorage.setItem(d.BROW_SETTINGS, JSON.stringify(f));
        }, h = function() {
            var a = this.dialogContent.querySelector(".content__time"), b = this.dialogContent.querySelector(".content__theme"), c = this.dialogContent.querySelector("#settings--dateformat"), h = this.dialogContent.querySelector("#settings--ampm"), i = this.dialogContent.querySelector("#settings--coloredhead"), j = JSON.parse(localStorage[d.BROW_SETTINGS]);
            // Validate date settings and update DOM
            "12h" === j.dateFormat && (c.checked = !1), h.checked = j.abbreviations, h.disabled = !j.abbreviations, 
            // Validate header bar settings and update DOM
            e.isCustomTheme() && (i.checked = j.theme.headerbar), // Add eventListener
            a.addEventListener("click", g.bind(this)), b.addEventListener("click", f.bind(this));
        };
        c["default"] = h, b.exports = c["default"];
    }, {
        "../utils/constants": 7,
        "../utils/helper": 9
    } ]
}, {}, [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ]);